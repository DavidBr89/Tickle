{"remainingRequest":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js?cacheDirectory=true!/home/djan/dev/TickleClient/src/components/MapView/reducer.js","dependencies":[{"path":"/home/djan/dev/TickleClient/src/components/MapView/reducer.js","mtime":1516649884681},{"path":"/home/djan/dev/TickleClient/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js","mtime":1492805601000}],"contextDependencies":[],"result":["import _extends from 'babel-runtime/helpers/extends';\n// import { combineReducers } from 'redux';\n// import cards from './cards';\n// import visibilityFilter from './visibilityFilter';\nimport { SELECT_CARD, RESIZE_CARD_WINDOW, USER_MOVE, CHANGE_MAP_VIEWPORT, SCREEN_RESIZE, PLAY_CARD_CHALLENGE, TOGGLE_CARD_CHALLENGE, EXTEND_SELECTED_CARD } from './actions';\n\n// const mapViewApp = combineReducers({\n//   cards,\n//   visibilityFilter\n// });\n//\n// export default mapViewApp;\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  // console.log('action', action);\n  switch (action.type) {\n    case RESIZE_CARD_WINDOW:\n      {\n        return _extends({}, state, action);\n      }\n    case CHANGE_MAP_VIEWPORT:\n      {\n        // if (state.extCardId !== null) return state;\n        var viewport = action.options;\n        var mapHeight = viewport.height;\n        var width = viewport.width;\n        var mapZoom = viewport.zoom;\n\n        return _extends({}, state, {\n          mapHeight: mapHeight,\n          width: width,\n          mapZoom: mapZoom\n        });\n      }\n    // case PLAY_CARD_CHALLENGE:\n    //   return Object.assign({}, state, {\n    //   todos: [\n    //       ...state.todos,\n    //       {\n    //         text: action.text,\n    //         completed: false\n    //       }\n    //     ]\n    // });\n    case SELECT_CARD:\n      {\n        var selectedCardId = action.options;\n        var selectedCard = state.cards.find(function (d) {\n          return d.id === selectedCardId;\n        });\n        var newMapViewState = {\n          centerLocation: selectedCardId ? selectedCard.loc : _extends({}, state.userLocation),\n          mapZoom: selectedCardId ? 15 : state.mapZoom,\n          selectedCardId: selectedCardId\n        };\n        return _extends({}, state, newMapViewState);\n      }\n\n    case EXTEND_SELECTED_CARD:\n      {\n        var extCardId = action.options;\n        // console.log('extCardId', extCardId);\n        return _extends({}, state, { extCardId: extCardId });\n      }\n\n    case SCREEN_RESIZE:\n      {\n        var headerPad = state.headerPad;\n\n        var height = action.options.height - state.headerPad;\n        var _width = action.options.width;\n        var _mapHeight = height;\n        var defaultHeight = _mapHeight;\n        var newState = {\n          defaultHeight: defaultHeight,\n          height: height,\n          width: _width,\n          mapHeight: _mapHeight,\n          headerPad: headerPad\n        };\n        return _extends({}, state, newState);\n      }\n\n    case TOGGLE_CARD_CHALLENGE:\n      {\n        var cardChallengeOpen = action.options.cardChallengeOpen;\n\n        return _extends({}, state, {\n          cardChallengeOpen: cardChallengeOpen\n        });\n      }\n\n    case PLAY_CARD_CHALLENGE:\n      {\n        return _extends({}, state, {\n          modalOpen: !state.modalOpen\n        });\n      }\n\n    case USER_MOVE:\n      {\n        var options = action.options;\n        // if (state.extCardId !== null) return state;\n        console.log('action options user move', action.options, state);\n        var centerLocation = {\n          longitude: options.lngLat[0],\n          latitude: options.lngLat[1]\n        };\n        var userLocation = _extends({}, centerLocation);\n        console.log('userLocation', userLocation, 'centerLocation', centerLocation);\n        return _extends({}, state, {\n          centerLocation: centerLocation,\n          userLocation: userLocation\n        });\n      }\n    default:\n      return state;\n  }\n}\n\nvar _default = reducer;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(reducer, 'reducer', '/home/djan/dev/TickleClient/src/components/MapView/reducer.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/home/djan/dev/TickleClient/src/components/MapView/reducer.js');\n}();\n\n;",{"version":3,"sources":["src/components/MapView/reducer.js"],"names":["SELECT_CARD","RESIZE_CARD_WINDOW","USER_MOVE","CHANGE_MAP_VIEWPORT","SCREEN_RESIZE","PLAY_CARD_CHALLENGE","TOGGLE_CARD_CHALLENGE","EXTEND_SELECTED_CARD","reducer","state","action","type","viewport","options","mapHeight","height","width","mapZoom","zoom","selectedCardId","selectedCard","cards","find","d","id","newMapViewState","centerLocation","loc","userLocation","extCardId","headerPad","defaultHeight","newState","cardChallengeOpen","modalOpen","console","log","longitude","lngLat","latitude"],"mappings":";AAAA;AACA;AACA;AACA,SACEA,WADF,EAEEC,kBAFF,EAGEC,SAHF,EAIEC,mBAJF,EAKEC,aALF,EAMEC,mBANF,EAOEC,qBAPF,EAQEC,oBARF,QASO,WATP;;AAWA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,GAAqC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACnC;AACA,UAAQA,OAAOC,IAAf;AACE,SAAKV,kBAAL;AAAyB;AACvB,4BAAYQ,KAAZ,EAAsBC,MAAtB;AACD;AACD,SAAKP,mBAAL;AAA0B;AACxB;AACA,YAAMS,WAAWF,OAAOG,OAAxB;AACA,YAAMC,YAAYF,SAASG,MAA3B;AACA,YAAMC,QAAQJ,SAASI,KAAvB;AACA,YAAMC,UAAUL,SAASM,IAAzB;;AAEA,4BACKT,KADL;AAEEK,8BAFF;AAGEE,sBAHF;AAIEC;AAJF;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKjB,WAAL;AAAkB;AAChB,YAAMmB,iBAAiBT,OAAOG,OAA9B;AACA,YAAMO,eAAeX,MAAMY,KAAN,CAAYC,IAAZ,CAAiB;AAAA,iBAAKC,EAAEC,EAAF,KAASL,cAAd;AAAA,SAAjB,CAArB;AACA,YAAMM,kBAAkB;AACtBC,0BAAgBP,iBACZC,aAAaO,GADD,gBAEPlB,MAAMmB,YAFC,CADM;AAItBX,mBAASE,iBAAiB,EAAjB,GAAsBV,MAAMQ,OAJf;AAKtBE;AALsB,SAAxB;AAOA,4BAAYV,KAAZ,EAAsBgB,eAAtB;AACD;;AAED,SAAKlB,oBAAL;AAA2B;AACzB,YAAMsB,YAAYnB,OAAOG,OAAzB;AACA;AACA,4BAAYJ,KAAZ,IAAmBoB,oBAAnB;AACD;;AAED,SAAKzB,aAAL;AAAoB;AAAA,YACV0B,SADU,GACIrB,KADJ,CACVqB,SADU;;AAElB,YAAMf,SAASL,OAAOG,OAAP,CAAeE,MAAf,GAAwBN,MAAMqB,SAA7C;AACA,YAAMd,SAAQN,OAAOG,OAAP,CAAeG,KAA7B;AACA,YAAMF,aAAYC,MAAlB;AACA,YAAMgB,gBAAgBjB,UAAtB;AACA,YAAMkB,WAAW;AACfD,sCADe;AAEfhB,wBAFe;AAGfC,uBAHe;AAIfF,+BAJe;AAKfgB;AALe,SAAjB;AAOA,4BAAYrB,KAAZ,EAAsBuB,QAAtB;AACD;;AAED,SAAK1B,qBAAL;AAA4B;AAAA,YAClB2B,iBADkB,GACIvB,OAAOG,OADX,CAClBoB,iBADkB;;AAE1B,4BACKxB,KADL;AAEEwB;AAFF;AAID;;AAED,SAAK5B,mBAAL;AAA0B;AACxB,4BACKI,KADL;AAEEyB,qBAAW,CAACzB,MAAMyB;AAFpB;AAID;;AAED,SAAKhC,SAAL;AAAgB;AACd,YAAMW,UAAUH,OAAOG,OAAvB;AACA;AACAsB,gBAAQC,GAAR,CAAY,0BAAZ,EAAwC1B,OAAOG,OAA/C,EAAwDJ,KAAxD;AACA,YAAMiB,iBAAiB;AACrBW,qBAAWxB,QAAQyB,MAAR,CAAe,CAAf,CADU;AAErBC,oBAAU1B,QAAQyB,MAAR,CAAe,CAAf;AAFW,SAAvB;AAIA,YAAMV,4BAAoBF,cAApB,CAAN;AACAS,gBAAQC,GAAR,CACE,cADF,EAEER,YAFF,EAGE,gBAHF,EAIEF,cAJF;AAMA,4BACKjB,KADL;AAEEiB,wCAFF;AAGEE;AAHF;AAKD;AACD;AACE,aAAOnB,KAAP;AApGJ;AAsGD;;eAEcD,O;AAAf;;;;;;;;gCA1GSA,O","file":"reducer.js","sourceRoot":"/home/djan/dev/TickleClient","sourcesContent":["// import { combineReducers } from 'redux';\n// import cards from './cards';\n// import visibilityFilter from './visibilityFilter';\nimport {\n  SELECT_CARD,\n  RESIZE_CARD_WINDOW,\n  USER_MOVE,\n  CHANGE_MAP_VIEWPORT,\n  SCREEN_RESIZE,\n  PLAY_CARD_CHALLENGE,\n  TOGGLE_CARD_CHALLENGE,\n  EXTEND_SELECTED_CARD\n} from './actions';\n\n// const mapViewApp = combineReducers({\n//   cards,\n//   visibilityFilter\n// });\n//\n// export default mapViewApp;\n\nfunction reducer(state = {}, action) {\n  // console.log('action', action);\n  switch (action.type) {\n    case RESIZE_CARD_WINDOW: {\n      return { ...state, ...action };\n    }\n    case CHANGE_MAP_VIEWPORT: {\n      // if (state.extCardId !== null) return state;\n      const viewport = action.options;\n      const mapHeight = viewport.height;\n      const width = viewport.width;\n      const mapZoom = viewport.zoom;\n\n      return {\n        ...state,\n        mapHeight,\n        width,\n        mapZoom\n      };\n    }\n    // case PLAY_CARD_CHALLENGE:\n    //   return Object.assign({}, state, {\n    //   todos: [\n    //       ...state.todos,\n    //       {\n    //         text: action.text,\n    //         completed: false\n    //       }\n    //     ]\n    // });\n    case SELECT_CARD: {\n      const selectedCardId = action.options;\n      const selectedCard = state.cards.find(d => d.id === selectedCardId);\n      const newMapViewState = {\n        centerLocation: selectedCardId\n          ? selectedCard.loc\n          : { ...state.userLocation },\n        mapZoom: selectedCardId ? 15 : state.mapZoom,\n        selectedCardId\n      };\n      return { ...state, ...newMapViewState };\n    }\n\n    case EXTEND_SELECTED_CARD: {\n      const extCardId = action.options;\n      // console.log('extCardId', extCardId);\n      return { ...state, extCardId };\n    }\n\n    case SCREEN_RESIZE: {\n      const { headerPad } = state;\n      const height = action.options.height - state.headerPad;\n      const width = action.options.width;\n      const mapHeight = height;\n      const defaultHeight = mapHeight;\n      const newState = {\n        defaultHeight,\n        height,\n        width,\n        mapHeight,\n        headerPad\n      };\n      return { ...state, ...newState };\n    }\n\n    case TOGGLE_CARD_CHALLENGE: {\n      const { cardChallengeOpen } = action.options;\n      return {\n        ...state,\n        cardChallengeOpen\n      };\n    }\n\n    case PLAY_CARD_CHALLENGE: {\n      return {\n        ...state,\n        modalOpen: !state.modalOpen\n      };\n    }\n\n    case USER_MOVE: {\n      const options = action.options;\n      // if (state.extCardId !== null) return state;\n      console.log('action options user move', action.options, state);\n      const centerLocation = {\n        longitude: options.lngLat[0],\n        latitude: options.lngLat[1]\n      };\n      const userLocation = { ...centerLocation };\n      console.log(\n        'userLocation',\n        userLocation,\n        'centerLocation',\n        centerLocation\n      );\n      return {\n        ...state,\n        centerLocation,\n        userLocation\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]}]}