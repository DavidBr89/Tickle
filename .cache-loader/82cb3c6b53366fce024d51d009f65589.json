{"remainingRequest":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js!/home/djan/dev/TickleClient/src/components/CardCreator/reducer.js","dependencies":[{"path":"/home/djan/dev/TickleClient/src/components/CardCreator/reducer.js","mtime":1517414999700},{"path":"/home/djan/dev/TickleClient/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js","mtime":1492805601000}],"contextDependencies":[],"result":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\n// import { combineReducers } from 'redux';\n// import cards from './cards';\n// import visibilityFilter from './visibilityFilter';\nimport ViewportMercator from 'viewport-mercator-project';\nimport { CARD_CREATOR_SCREEN_RESIZE, CHANGE_MAP_VIEWPORT, SELECT_CARD, UPDATE_CARD, CREATE_CARD, DRAG_CARD, OPEN_CARD_DETAILS, TOGGLE_CARD_TEMPLATE } from './actions';\n\n// const mapViewApp = combineReducers({\n//   cards,\n//   visibilityFilter\n// });\n//\n// export default mapViewApp;\n\nvar dummyCard = function dummyCard(_ref) {\n  var latitude = _ref.latitude,\n      longitude = _ref.longitude;\n  return {\n    title: '-',\n    type: '-',\n    // TODO: change\n    id: Math.random() * 1000,\n    date: '04/04/2012 10:00',\n    tags: ['', ''],\n    img: '',\n    caption: '',\n    xpPoints: 0,\n    // TODO: remove in future to component\n    description: '',\n    loc: { latitude: latitude, longitude: longitude },\n    creator: 'Jan',\n    media: [],\n    friends: [],\n    rating: [],\n    cardSets: [],\n    linkedCards: []\n  };\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n\n  console.log(action.type, action.options);\n  switch (action.type) {\n    case CARD_CREATOR_SCREEN_RESIZE:\n      {\n        console.log('state taken', action);\n        var height = action.options.height - state.headerPad;\n        var width = action.options.width;\n        console.log('width', width, 'height', height);\n        return _extends({}, state, { width: width, height: height });\n      }\n\n    case CHANGE_MAP_VIEWPORT:\n      {\n        var mapViewport = action.options;\n\n        return _extends({}, state, {\n          mapViewport: mapViewport\n        });\n      }\n    case SELECT_CARD:\n      {\n        var _width = state.width,\n            _height = state.height;\n\n        if (action.options) {\n          var _action$options$locat = action.options.location,\n              latitude = _action$options$locat.latitude,\n              longitude = _action$options$locat.longitude;\n\n          var selected = _extends({}, action.options, { extended: false });\n          var _mapViewport = _extends({}, state.mapViewport, {\n            latitude: latitude,\n            longitude: longitude,\n            height: _height * 1.5\n          });\n          return _extends({}, state, {\n            mapViewport: _mapViewport,\n            oldViewport: _extends({}, state.mapViewport),\n            selected: selected\n          });\n        }\n        return _extends({}, state, {\n          mapViewport: state.oldViewport,\n          selected: null\n        });\n      }\n    case OPEN_CARD_DETAILS:\n      {\n        var selectedCardId = action.options;\n        console.log('open', action);\n\n        return _extends({}, state, {\n          highlighted: true\n        });\n      }\n    case UPDATE_CARD:\n      {\n        var _selectedCardId = action.options.selectedCardId;\n\n\n        return _extends({}, state, {\n          selectedCardId: _selectedCardId\n        });\n      }\n    case CREATE_CARD:\n      {\n        var _width2 = state.width,\n            _height2 = state.height,\n            _mapViewport2 = state.mapViewport;\n\n\n        var mercator = new ViewportMercator(_extends({ width: _width2, height: _height2 }, _mapViewport2));\n        var unproject = mercator.unproject;\n        var _action$options = action.options,\n            x = _action$options.x,\n            y = _action$options.y;\n\n        var pos = unproject([x, y]);\n        var newCard = dummyCard({\n          id: 'tempCard' + Math.random() * 100,\n          longitude: pos[0],\n          latitude: pos[1]\n        });\n        newCard.temp = true;\n        return _extends({}, state, {\n          cards: [].concat(_toConsumableArray(state.cards), [newCard]),\n          isDragging: false\n        });\n      }\n    case DRAG_CARD:\n      {\n\n        var isDragging = action.options;\n        return _extends({}, state, {\n          isDragging: isDragging\n        });\n      }\n    case TOGGLE_CARD_TEMPLATE:\n      {\n        console.log('card tem');\n        // return {\n        //\n        //   ...state,\n        //   isDragging: true\n        // };\n        return _extends({}, state, { cardTemplateOpen: !state.cardTemplateOpen });\n      }\n    default:\n      return state;\n  }\n}\n\nvar _default = reducer;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(dummyCard, 'dummyCard', '/home/djan/dev/TickleClient/src/components/CardCreator/reducer.js');\n\n  __REACT_HOT_LOADER__.register(reducer, 'reducer', '/home/djan/dev/TickleClient/src/components/CardCreator/reducer.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/home/djan/dev/TickleClient/src/components/CardCreator/reducer.js');\n}();\n\n;",{"version":3,"sources":["src/components/CardCreator/reducer.js"],"names":["ViewportMercator","CARD_CREATOR_SCREEN_RESIZE","CHANGE_MAP_VIEWPORT","SELECT_CARD","UPDATE_CARD","CREATE_CARD","DRAG_CARD","OPEN_CARD_DETAILS","TOGGLE_CARD_TEMPLATE","dummyCard","latitude","longitude","title","type","id","Math","random","date","tags","img","caption","xpPoints","description","loc","creator","media","friends","rating","cardSets","linkedCards","reducer","state","action","console","log","options","height","headerPad","width","mapViewport","location","selected","extended","oldViewport","selectedCardId","highlighted","mercator","unproject","x","y","pos","newCard","temp","cards","isDragging","cardTemplateOpen"],"mappings":"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","file":"reducer.js","sourceRoot":"/home/djan/dev/TickleClient","sourcesContent":["// import { combineReducers } from 'redux';\n// import cards from './cards';\n// import visibilityFilter from './visibilityFilter';\nimport ViewportMercator from 'viewport-mercator-project';\nimport {\n  CARD_CREATOR_SCREEN_RESIZE,\n  CHANGE_MAP_VIEWPORT,\n  SELECT_CARD,\n  UPDATE_CARD,\n  CREATE_CARD,\n  DRAG_CARD,\n  OPEN_CARD_DETAILS,\n  TOGGLE_CARD_TEMPLATE\n} from './actions';\n\n// const mapViewApp = combineReducers({\n//   cards,\n//   visibilityFilter\n// });\n//\n// export default mapViewApp;\n\nconst dummyCard = ({ latitude, longitude }) => ({\n  title: '-',\n  type: '-',\n  // TODO: change\n  id: Math.random() * 1000,\n  date: '04/04/2012 10:00',\n  tags: ['', ''],\n  img: '',\n  caption: '',\n  xpPoints: 0,\n  // TODO: remove in future to component\n  description: '',\n  loc: { latitude, longitude },\n  creator: 'Jan',\n  media: [],\n  friends: [],\n  rating: [],\n  cardSets: [],\n  linkedCards: []\n});\n\nfunction reducer(state = {}, action) {\n  console.log(action.type, action.options);\n  switch (action.type) {\n    case CARD_CREATOR_SCREEN_RESIZE: {\n      console.log('state taken', action);\n      const height = action.options.height - state.headerPad;\n      const width = action.options.width;\n      console.log('width', width, 'height', height);\n      return { ...state, width, height };\n    }\n\n    case CHANGE_MAP_VIEWPORT: {\n      const mapViewport = action.options;\n\n      return {\n        ...state,\n        mapViewport\n      };\n    }\n    case SELECT_CARD: {\n      const { width, height } = state;\n      if (action.options) {\n        const { latitude, longitude } = action.options.location;\n        const selected = { ...action.options, extended: false };\n        const mapViewport = {\n          ...state.mapViewport,\n          latitude,\n          longitude,\n          height: height * 1.5\n        };\n        return {\n          ...state,\n          mapViewport,\n          oldViewport: { ...state.mapViewport },\n          selected\n        };\n      }\n      return {\n        ...state,\n        mapViewport: state.oldViewport,\n        selected: null\n      };\n    }\n    case OPEN_CARD_DETAILS: {\n      const selectedCardId = action.options;\n      console.log('open', action);\n\n      return {\n        ...state,\n        highlighted: true\n      };\n    }\n    case UPDATE_CARD: {\n      const { selectedCardId } = action.options;\n\n      return {\n        ...state,\n        selectedCardId\n      };\n    }\n    case CREATE_CARD: {\n      const { width, height, mapViewport } = state;\n\n      const mercator = new ViewportMercator({ width, height, ...mapViewport });\n      const { unproject } = mercator;\n      const { x, y } = action.options;\n      const pos = unproject([x, y]);\n      const newCard = dummyCard({\n        id: `tempCard${Math.random() * 100}`,\n        longitude: pos[0],\n        latitude: pos[1]\n      });\n      newCard.temp = true;\n      return {\n        ...state,\n        cards: [...state.cards, newCard],\n        isDragging: false\n      };\n    }\n    case DRAG_CARD: {\n\n      const isDragging = action.options;\n      return {\n        ...state,\n        isDragging\n      };\n    }\n    case TOGGLE_CARD_TEMPLATE: {\n      console.log('card tem');\n      // return {\n      //\n      //   ...state,\n      //   isDragging: true\n      // };\n      return { ...state, cardTemplateOpen: !state.cardTemplateOpen };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]}]}