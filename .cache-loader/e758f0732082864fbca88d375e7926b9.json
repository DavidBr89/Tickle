{"remainingRequest":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js?cacheDirectory=true!/home/djan/dev/TickleClient/src/components/cards/index.jsx","dependencies":[{"path":"/home/djan/dev/TickleClient/src/components/cards/index.jsx","mtime":1517438291800},{"path":"/home/djan/dev/TickleClient/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js","mtime":1492805601000}],"contextDependencies":[],"result":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _extends from 'babel-runtime/helpers/extends';\n\nvar _class, _temp, _class2, _temp2, _class3, _temp3, _class4, _temp4, _class5, _temp5, _class6, _temp6;\n\nimport React, { Component } from 'react';\nimport ReacDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport MapGL from 'react-map-gl';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport Grid from 'mygrid/dist';\n// TODO: replace\nimport * as chromatic from 'd3-scale-chromatic';\n// import ClampLines from 'react-clamp-lines';\nimport 'w3-css';\n// import 'react-tagsinput/react-tagsinput.css'; // If using WebPack and style-loader.\n\nimport { CardMarker } from '../utils/map-layers/DivOverlay';\nimport { challengeTypes, mediaTypes, skillTypes } from '../../dummyData';\nimport cx from './Card.scss';\nimport colorClasses from '../colorClasses';\n// import StarRating from './utils/StarRating';\n// import exampleImg from './example_challenge.jpg';\nimport { Wrapper } from '../utils';\n\nvar random = function random() {\n  return Math.random() * 1000;\n};\n\nvar profileSrc = function profileSrc() {\n  var gender = Math.random() < 0.5 ? 'men' : 'women';\n  var i = Math.round(Math.random() * 100);\n  return 'https://randomuser.me/api/portraits/thumb/' + gender + '/' + i + '.jpg';\n};\n// console.log('colorClasses', colorClasses);\n\nvar mediaScale = d3.scaleOrdinal().domain(mediaTypes).range(['fa-gamepad', 'fa-link', 'fa-camera', 'fa-video-camera']);\n\n// console.log('mediaScale', mediaScale('hyperlink'));\nvar colorScale = d3.scaleOrdinal().domain(challengeTypes).range(chromatic.schemePastel1);\n\nvar colorScaleRandom = d3.scaleLinear().domain(d3.range(colorClasses.length)).range(colorClasses).clamp(true);\n\nvar skillColorScale = d3.scaleOrdinal().domain(skillTypes).range(colorClasses);\n\nvar colorClass = function colorClass() {\n  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'title';\n  return colorScaleRandom(title.length % colorClasses.length);\n};\n\nvar defaultProps = {\n  title: 'The peculiar story of Arthur De Greef',\n  challenge: { type: 'gap text' },\n  date: '28/04/2012 10:00',\n  tags: ['Art', 'Culture', 'Music'],\n  img: 'https://drive.google.com/uc?export=view&id=1N9Ed6a_CDa8SEMZeLaxULF4FtkHBQf4Feg',\n  xpPoints: 100,\n  // TODO: remove in future to component\n  description: '\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"',\n  loc: { latitude: 50.828797, longitude: 4.352191 },\n  place: 'Park next to my Home',\n  creator: 'Jan',\n  radius: 400,\n  media: [{\n    type: 'photo',\n    name: 'franz-liszt---the-first-rock-star',\n    src: ''\n  }, {\n    type: 'hyperlink',\n    name: 'franz-liszt---the-first-rock-star',\n    src: ''\n  }, {\n    type: 'game',\n    name: 'franz-liszt---the-first-rock-star',\n    src: ''\n  }],\n  comments: [{\n    user: 'Nils',\n    comment: 'I did not know that he was such a famous composer'\n  }, {\n    user: 'Babba',\n    comment: 'What a nice park, strange, that they put a mask on his face!'\n  }],\n  cardSets: ['european_composers'],\n  linkedCards: ['Frank Liszt', 'Music school Arthur de Greef']\n};\n\nvar EditButton = function EditButton(_ref) {\n  var style = _ref.style,\n      onClick = _ref.onClick;\n  return React.createElement('i', {\n    className: 'fa fa-2x fa-pencil-square-o ml-1',\n    style: _extends({ cursor: 'pointer' }, style),\n    onClick: onClick\n  });\n};\n\nEditButton.propTypes = {\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nEditButton.defaultProps = { style: {}, onClick: function onClick() {\n    return null;\n  } };\n\nvar Media = function Media(_ref2) {\n  var data = _ref2.data;\n  return React.createElement(\n    Grid,\n    { cols: data.length, rows: 1 },\n    data.map(function (m) {\n      return React.createElement(\n        'div',\n        { key: m.src + random() },\n        React.createElement(\n          'div',\n          { className: 'mr-1 row' },\n          React.createElement('i', {\n            className: 'fa ' + mediaScale(m.type) + ' fa-2x col-1',\n            'aria-hidden': 'true'\n          }),\n          React.createElement(\n            'div',\n            { className: 'ml-1 col' },\n            React.createElement(\n              'a',\n              { href: m.src },\n              'name'\n            )\n          )\n        )\n      );\n    })\n  );\n};\n\nMedia.propTypes = {\n  data: PropTypes.array.isRequired\n  // extended: PropTypes.bool\n};\n\nMedia.defaultProps = { data: defaultProps.media, extended: false };\n\nvar SmallModal = function SmallModal(_ref3) {\n  var visible = _ref3.visible,\n      title = _ref3.title,\n      children = _ref3.children,\n      onClose = _ref3.onClose,\n      onSave = _ref3.onSave;\n  return ReacDOM.createPortal(React.createElement(\n    'div',\n    {\n      style: {\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0, 0, 0, 0.5)',\n        opacity: visible ? 1 : 0,\n        transition: 'opacity 1s',\n        zIndex: visible ? '4000' : '-10',\n        left: 0,\n        top: 0,\n        position: 'absolute'\n      }\n    },\n    React.createElement(\n      'div',\n      {\n        className: 'modal fade show',\n        tabIndex: '-1',\n        role: 'dialog',\n        'aria-labelledby': 'exampleModalLabel',\n        'aria-hidden': 'true',\n        style: {\n          opacity: visible ? 1 : 0,\n          display: visible ? 'block' : 'none'\n        }\n      },\n      React.createElement(\n        'div',\n        { className: 'modal-dialog modal-dialog-centered', role: 'document' },\n        React.createElement(\n          'div',\n          { className: 'modal-content' },\n          React.createElement(\n            'div',\n            { className: 'modal-header' },\n            React.createElement(\n              'h5',\n              { className: 'modal-title', id: 'exampleModalLabel' },\n              title\n            ),\n            React.createElement(\n              'button',\n              {\n                type: 'button',\n                className: 'close',\n                'data-dismiss': 'modal',\n                'aria-label': 'Close',\n                onClick: onClose\n              },\n              React.createElement(\n                'span',\n                { 'aria-hidden': 'true' },\n                '\\xD7'\n              )\n            )\n          ),\n          children\n        )\n      )\n    )\n  ), document.querySelector('body'));\n};\n\nSmallModal.propTypes = {\n  visible: PropTypes.bool,\n  title: PropTypes.string,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  onSave: PropTypes.func\n};\nSmallModal.defaultProps = {\n  visible: true,\n  title: '-',\n  children: React.createElement(\n    'div',\n    null,\n    'test'\n  ),\n  onClose: function onClose() {\n    return null;\n  },\n  onSave: function onSave() {\n    return null;\n  }\n};\n\nvar ModalHeaderFooter = function ModalHeaderFooter(_ref4) {\n  var children = _ref4.children,\n      onSubmit = _ref4.onSubmit;\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'div',\n      { className: 'modal-body' },\n      children\n    ),\n    React.createElement(\n      'div',\n      { className: 'modal-footer' },\n      React.createElement(\n        'button',\n        { type: 'button', className: 'btn btn-secondary', 'data-dismiss': 'modal' },\n        'Close'\n      ),\n      React.createElement(\n        'button',\n        { type: 'button', className: 'btn btn-primary', onClick: onSubmit },\n        'Save changes'\n      )\n    )\n  );\n};\n\nModalHeaderFooter.propTypes = {\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func\n};\n\nModalHeaderFooter.defaultProps = {\n  onSubmit: function onSubmit() {\n    return null;\n  }\n};\n\nvar ReadCardFront = function ReadCardFront(_ref5) {\n  var tags = _ref5.tags,\n      img = _ref5.img,\n      description = _ref5.description,\n      media = _ref5.media,\n      edit = _ref5.edit,\n      onCollect = _ref5.onCollect;\n  return React.createElement(\n    'div',\n    {\n      className: cx.cardDetail,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: '90%'\n      }\n    },\n    React.createElement(PreviewTags, { data: tags }),\n    React.createElement(\n      'div',\n      { className: 'mt-1 mb-1' },\n      React.createElement('img', { src: img, alt: 'Card img', style: { width: '100%', height: '100%' } })\n    ),\n    React.createElement(\n      'div',\n      null,\n      React.createElement(\n        'fieldset',\n        { className: cx.field },\n        React.createElement(\n          'legend',\n          null,\n          'description'\n        ),\n        React.createElement(\n          'div',\n          { className: cx.textClamp },\n          description\n        )\n      )\n    ),\n    React.createElement(\n      'div',\n      null,\n      React.createElement(\n        'fieldset',\n        { className: cx.field },\n        React.createElement(\n          'legend',\n          null,\n          'Media:'\n        ),\n        React.createElement(Media, { data: media })\n      )\n    ),\n    !edit ? React.createElement(CollectButton, { onClick: onCollect }) : null\n  );\n};\n\nReadCardFront.propTypes = {\n  description: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  onCollect: PropTypes.func,\n  children: PropTypes.array\n};\n\nReadCardFront.defaultProps = _extends({}, defaultProps, { onCollect: null });\n\nvar MediaSearch = function MediaSearch(_ref6) {\n  var media = _ref6.media,\n      onSubmit = _ref6.onSubmit;\n  return React.createElement(\n    ModalHeaderFooter,\n    null,\n    React.createElement(\n      'div',\n      { style: { width: '100%' } },\n      React.createElement(\n        'ul',\n        { className: 'nav nav-pills mb-3', id: 'pills-tab', role: 'tablist' },\n        React.createElement(\n          'li',\n          { className: 'nav-item' },\n          React.createElement(\n            'a',\n            {\n              className: 'nav-link active',\n              id: 'pills-home-tab',\n              'data-toggle': 'pill',\n              href: '#pills-home',\n              role: 'tab',\n              'aria-controls': 'pills-home',\n              'aria-selected': 'true'\n            },\n            React.createElement('i', { className: 'fa fa-link fa-2x col-1', 'aria-hidden': 'true' })\n          )\n        ),\n        React.createElement(\n          'li',\n          { className: 'nav-item' },\n          React.createElement(\n            'a',\n            {\n              className: 'nav-link',\n              id: 'pills-profile-tab',\n              'data-toggle': 'pill',\n              href: '#pills-profile',\n              role: 'tab',\n              'aria-controls': 'pills-profile',\n              'aria-selected': 'false'\n            },\n            React.createElement('i', { className: 'fa fa-camera fa-2x col-1', 'aria-hidden': 'true' })\n          )\n        ),\n        React.createElement(\n          'li',\n          { className: 'nav-item' },\n          React.createElement(\n            'a',\n            {\n              className: 'nav-link',\n              id: 'pills-contact-tab',\n              'data-toggle': 'pill',\n              href: '#pills-contact',\n              role: 'tab',\n              'aria-controls': 'pills-contact',\n              'aria-selected': 'false'\n            },\n            React.createElement('i', {\n              className: 'fa fa-video-camera fa-2x col-1',\n              'aria-hidden': 'true'\n            })\n          )\n        )\n      ),\n      React.createElement(\n        'div',\n        { className: 'tab-content', id: 'pills-tabContent' },\n        React.createElement('div', {\n          className: 'tab-pane fade show active',\n          id: 'pills-home',\n          role: 'tabpanel',\n          'aria-labelledby': 'pills-home-tab'\n        }),\n        React.createElement(\n          'div',\n          {\n            className: 'tab-pane fade',\n            id: 'pills-profile',\n            role: 'tabpanel',\n            'aria-labelledby': 'pills-profile-tab'\n          },\n          '...'\n        ),\n        React.createElement(\n          'div',\n          {\n            className: 'tab-pane fade',\n            id: 'pills-contact',\n            role: 'tabpanel',\n            'aria-labelledby': 'pills-contact-tab'\n          },\n          '...'\n        )\n      )\n    )\n  );\n};\n\nMediaSearch.propTypes = {\n  media: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func\n};\n\nMediaSearch.defaultProps = { onSubmit: function onSubmit() {\n    return null;\n  } };\n\nvar EditableCardFront = (_temp = _class = function (_Component) {\n  _inherits(EditableCardFront, _Component);\n\n  function EditableCardFront(props) {\n    _classCallCheck(this, EditableCardFront);\n\n    var _this = _possibleConstructorReturn(this, (EditableCardFront.__proto__ || _Object$getPrototypeOf(EditableCardFront)).call(this, props));\n\n    _this.state = { data: _extends({}, props), dialog: null };\n    _this.nodeDescription = null;\n    return _this;\n  }\n\n  _createClass(EditableCardFront, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('hey', this.props);\n      //\n      var data = this.state.data;\n      var tags = data.tags,\n          img = data.img,\n          description = data.description,\n          media = data.media,\n          children = data.children,\n          challenge = data.challenge;\n      var dialog = this.state.dialog;\n\n      var modalVisible = dialog !== null;\n      var id = dialog !== null ? dialog.id : null;\n      // const modalStyle = modalVisible\n      //   ? { background: 'black', opacity: 0.5 }\n      //   : {};\n      var setFieldState = function setFieldState(field) {\n        return _this2.setState(function (oldState) {\n          return {\n            data: _extends({}, oldState.data, field)\n          };\n        });\n      };\n      var modalContent = function modalContent() {\n        switch (id) {\n          case 'tags':\n            return React.createElement(TagInput, {\n              tags: tags,\n              onSubmit: function onSubmit(newTags) {\n                return setFieldState({ tags: newTags });\n              }\n            });\n          case 'photo':\n            return React.createElement(\n              'div',\n              null,\n              'photo'\n            );\n          case 'description':\n            return React.createElement(\n              ModalHeaderFooter,\n              {\n                onSubmit: function onSubmit() {\n                  return setFieldState({ description: _this2.nodeDescription.value });\n                }\n              },\n              React.createElement(\n                'div',\n                { className: 'form-group' },\n                React.createElement(\n                  'textarea',\n                  {\n                    ref: function ref(n) {\n                      return _this2.nodeDescription = n;\n                    },\n                    style: { width: '100%' },\n                    onSubmit: function onSubmit() {\n                      return null;\n                    }\n                  },\n                  description\n                )\n              )\n            );\n          case 'media':\n            return React.createElement(\n              'div',\n              null,\n              React.createElement(MediaSearch, { media: media, onSubmit: function onSubmit() {\n                  return null;\n                } })\n            );\n          case 'challenge':\n            return React.createElement(\n              'div',\n              null,\n              'challenge'\n            );\n          default:\n            return React.createElement(\n              'div',\n              null,\n              'error'\n            );\n        }\n      };\n      return React.createElement(\n        'div',\n        { style: { height: '100%' } },\n        React.createElement(\n          SmallModal,\n          {\n            visible: modalVisible,\n            title: modalVisible ? dialog.title : '',\n            onClose: function onClose() {\n              return _this2.setState({ dialog: null });\n            }\n          },\n          modalContent()\n        ),\n        React.createElement(\n          'div',\n          {\n            className: cx.cardDetail,\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              // justifyContent: 'space-between',\n              height: '90%'\n            }\n          },\n          React.createElement(\n            'div',\n            { style: { display: 'flex' } },\n            React.createElement(PreviewTags, { data: tags }),\n            React.createElement('i', {\n              style: { fontSize: '24px', cursor: 'pointer' },\n              className: 'fa fa-pencil-square-o ml-1',\n              onClick: function onClick() {\n                return _this2.setState({\n                  dialog: { title: 'Tags', id: 'tags', data: tags }\n                });\n              }\n            })\n          ),\n          React.createElement(\n            'div',\n            { className: 'mt-1 mb-1' },\n            React.createElement(\n              'div',\n              {\n                alt: 'Card cap',\n                style: {\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  alignContent: 'center',\n                  alignItems: 'center'\n                }\n              },\n              React.createElement(\n                'div',\n                { className: 'mt-1 mb-1' },\n                React.createElement('img', {\n                  src: 'http://via.placeholder.com/450x270',\n                  alt: 'Card img',\n                  style: { width: '100%', height: '100%' }\n                })\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { style: { height: '20%' } },\n            React.createElement(\n              'fieldset',\n              { className: '' + cx.field, style: { height: '90%' } },\n              React.createElement(\n                'legend',\n                null,\n                'description'\n              ),\n              React.createElement(\n                'div',\n                {\n                  style: { display: 'flex', alignContent: 'end', height: '100%' }\n                },\n                React.createElement(\n                  'div',\n                  { className: cx.textClamp, style: { height: '100%' } },\n                  description\n                ),\n                React.createElement(\n                  'div',\n                  null,\n                  React.createElement(EditButton, {\n                    onClick: function onClick() {\n                      return _this2.setState({\n                        dialog: {\n                          title: 'Description',\n                          id: 'description',\n                          data: description\n                        }\n                      });\n                    }\n                  })\n                )\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { style: { height: '15%' } },\n            React.createElement(\n              'fieldset',\n              { className: cx.field },\n              React.createElement(\n                'legend',\n                null,\n                'Media:'\n              ),\n              React.createElement(\n                'div',\n                { style: { display: 'flex', alignContent: 'end' } },\n                React.createElement(Media, null),\n                React.createElement(\n                  'div',\n                  null,\n                  React.createElement(EditButton, {\n                    onClick: function onClick() {\n                      return _this2.setState({\n                        dialog: { title: 'Media', id: 'media', data: media }\n                      });\n                    }\n                  })\n                )\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            null,\n            React.createElement(\n              'div',\n              { style: { display: 'flex', alignContent: 'end' } },\n              React.createElement(\n                'div',\n                { className: 'p-1 pt-3', style: { width: '100%' } },\n                React.createElement(\n                  'button',\n                  {\n                    className: 'btn btn-secondary btn-lg btn-block}',\n                    style: { width: '100%', alignSelf: 'flex-end' },\n                    onClick: function onClick() {\n                      return _this2.setState({\n                        dialog: {\n                          title: 'Challenge',\n                          id: 'challenge',\n                          data: challenge\n                        }\n                      });\n                    }\n                  },\n                  React.createElement(\n                    'div',\n                    {\n                      style: {\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignContent: 'center'\n                      }\n                    },\n                    React.createElement(\n                      'div',\n                      null,\n                      'Challenge'\n                    ),\n                    React.createElement(\n                      'div',\n                      {\n                        style: {\n                          marginLeft: '4px',\n                          paddingLeft: '4px',\n                          paddingRight: '4px'\n                        }\n                      },\n                      React.createElement(EditButton, null)\n                    )\n                  )\n                )\n              )\n            )\n          ),\n          children\n        )\n      );\n    }\n  }]);\n\n  return EditableCardFront;\n}(Component), _class.propTypes = ReadCardFront.propTypes, _class.defaultProps = ReadCardFront.defaultProps, _temp);\n\n\nEditableCardFront.defaultProps = defaultProps;\n\nfunction CardFront(props) {\n  return props.edit ? React.createElement(EditableCardFront, props) : React.createElement(ReadCardFront, props);\n}\n\nCardFront.propTypes = _extends({}, ReadCardFront.propTypes, { edit: PropTypes.bool });\n\nCardFront.defaultProps = { edit: false };\n\n// const EditableCardFront = ({ tags, img, description, media, children }) => (\n//   <div\n//     className={cx.cardDetail}\n//     style={{\n//       display: 'flex',\n//       flexDirection: 'column',\n//       // justifyContent: 'space-between',\n//       height: '90%'\n//     }}\n//   >\n//     <PreviewTags data={tags} />\n//     <div className=\"mt-1 mb-1\">\n//       <div\n//         alt=\"Card cap\"\n//         style={{\n//           width: '100%',\n//           height: '100%',\n//           display: 'flex',\n//           alignContent: 'center',\n//           alignItems: 'center'\n//         }}\n//       >\n//         <div className=\"mt-1 mb-1\">\n//           <img\n//             src=\"http://via.placeholder.com/450x270\"\n//             alt=\"Card img\"\n//             style={{ width: '100%', height: '100%' }}\n//           />\n//         </div>\n//       </div>\n//     </div>\n//     <div>\n//       <fieldset className={cx.field}>\n//         <legend>description</legend>\n//         <textarea className=\"form-control\" rows=\"3\" />\n//       </fieldset>\n//     </div>\n//     <div>\n//       <fieldset className={cx.field}>\n//         <legend>Media:</legend>\n//         <TagInput />\n//       </fieldset>\n//     </div>\n//     <div onClick={() => this.setState({ dialog: true })}>\n//       <fieldset className={cx.field}>\n//         <legend>Challenge:</legend>\n//       </fieldset>\n//     </div>\n//     {children}\n//   </div>\n// );\n\nvar Tags = function Tags(_ref7) {\n  var data = _ref7.data;\n  return React.createElement(\n    'div',\n    { className: cx.tags },\n    data.map(function (t) {\n      return React.createElement(\n        'div',\n        { key: t + random(), className: cx.tag + ' ' + colorClass(t) },\n        React.createElement(\n          'small',\n          null,\n          t\n        )\n      );\n    })\n  );\n};\n\nTags.propTypes = { data: PropTypes.array };\nTags.defaultProps = { data: ['tag1', 'exampleTag'] };\n\nvar PreviewTags = function PreviewTags(_ref8) {\n  var data = _ref8.data;\n  return React.createElement(\n    'div',\n    {\n      style: {\n        display: 'flex'\n        // flexWrap: 'no-wrap'\n        // alignItems: 'center'\n      },\n      className: cx.textTrunc + ' ' + cx.tags\n    },\n    data.map(function (t) {\n      return React.createElement(\n        'small',\n        { key: t + random(), className: cx.tag + ' ' + colorClass(t) },\n        t\n      );\n    })\n  );\n};\n\nPreviewTags.propTypes = {\n  data: PropTypes.array\n};\n\nPreviewTags.defaultProps = {\n  data: ['tag', 'tag1', 'tag2']\n};\n\n// const SmallCategories = ({ data }) => (\n//   <div className={`${cx.textTrunc} ${cx.tags}`}>\n//     {data.map(t => (\n//       <small key={t + random()} className={`${cx.tag} ${colorClass(t)}`}>\n//         {t}\n//       </small>\n//     ))}\n//   </div>\n// );\n\nvar PreviewCard = (_temp2 = _class2 = function (_Component2) {\n  _inherits(PreviewCard, _Component2);\n\n  function PreviewCard() {\n    _classCallCheck(this, PreviewCard);\n\n    return _possibleConstructorReturn(this, (PreviewCard.__proto__ || _Object$getPrototypeOf(PreviewCard)).apply(this, arguments));\n  }\n\n  _createClass(PreviewCard, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.selected !== nextProps.selected;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          title = _props.title,\n          tags = _props.tags,\n          img = _props.img,\n          challenge = _props.challenge,\n          style = _props.style,\n          onClick = _props.onClick;\n\n      return React.createElement(\n        'div',\n        {\n          className: cx.cardMini2,\n          style: _extends({}, style, {\n            background: colorScale(challenge.type)\n          }),\n          onClick: onClick\n        },\n        React.createElement(\n          'div',\n          { className: cx.cardHeader },\n          React.createElement(\n            'h5',\n            { className: 'text-truncate' },\n            title\n          )\n        ),\n        React.createElement(\n          'div',\n          null,\n          React.createElement(PreviewTags, { data: tags }),\n          React.createElement(\n            'div',\n            { className: 'mt-1 mb-1' },\n            React.createElement('img', {\n              style: {\n                display: 'block',\n                maxWidth: '100%',\n                height: 'auto'\n              },\n              src: img,\n              alt: 'Card cap'\n            })\n          )\n        )\n      );\n    }\n  }]);\n\n  return PreviewCard;\n}(Component), _class2.propTypes = {\n  title: PropTypes.string.isRequired,\n  tags: PropTypes.array.isRequired,\n  img: PropTypes.string,\n  challenge: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  style: PropTypes.object,\n  selected: PropTypes.bool\n}, _class2.defaultProps = _extends({}, defaultProps, {\n  style: {},\n  selected: false\n}), _temp2);\n\n\nvar CardFrame = function CardFrame(_ref9) {\n  var title = _ref9.title,\n      onClose = _ref9.onClose,\n      challenge = _ref9.challenge,\n      children = _ref9.children,\n      flipHandler = _ref9.flipHandler,\n      edit = _ref9.edit,\n      style = _ref9.style;\n  return React.createElement(\n    'div',\n    {\n      className: cx.cardMini2 + ' ',\n      style: _extends({\n        background: colorScale(challenge.type),\n        overflow: 'hidden',\n        height: '100%'\n      }, style)\n    },\n    React.createElement(\n      'div',\n      { className: cx.cardHeader, style: { display: 'flex' } },\n      React.createElement(\n        'h3',\n        { className: 'text-truncate' },\n        title,\n        edit || React.createElement(EditButton, null)\n      ),\n      React.createElement(\n        'div',\n        { className: 'btn-group' },\n        React.createElement(\n          'button',\n          { className: 'close mr-2', onClick: onClose },\n          React.createElement('i', { className: 'fa fa-window-close fa-lg', 'aria-hidden': 'true' })\n        ),\n        React.createElement(\n          'button',\n          { className: 'close', onClick: flipHandler },\n          React.createElement('i', { className: 'fa fa-retweet fa-lg', 'aria-hidden': 'true' })\n        )\n      )\n    ),\n    children\n  );\n};\n\nCardFrame.propTypes = {\n  title: PropTypes.string,\n  // tags: PropTypes.array,\n  // img: PropTypes.string,\n  flipHandler: PropTypes.func,\n  challenge: PropTypes.object,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  onClose: PropTypes.func,\n  edit: PropTypes.bool\n};\n\nCardFrame.defaultProps = _extends({}, defaultProps, { edit: false, onClose: function onClose() {\n    return null;\n  } });\n\nvar Comments = function Comments(_ref10) {\n  var data = _ref10.data,\n      extended = _ref10.extended;\n  return React.createElement(\n    'div',\n    {\n      style: { display: 'flex', justifyContent: 'center', alignItems: 'center' }\n    },\n    data.map(function (_ref11) {\n      var comment = _ref11.comment,\n          user = _ref11.user,\n          date = _ref11.date;\n      return React.createElement(\n        'div',\n        null,\n        React.createElement('img', {\n          className: '' + cx.avatar,\n          width: '100%',\n          height: '100%',\n          src: profileSrc(),\n          alt: 'alt'\n        }),\n        extended && React.createElement(\n          'div',\n          { className: 'media-body' },\n          React.createElement(\n            'div',\n            { className: cx.textClamp },\n            React.createElement(\n              'small',\n              null,\n              comment\n            )\n          ),\n          React.createElement(\n            'div',\n            null,\n            React.createElement(\n              'small',\n              { className: 'font-italic' },\n              '- ',\n              user,\n              ', ',\n              date\n            )\n          )\n        )\n      );\n    })\n  );\n};\n\nComments.propTypes = {\n  data: PropTypes.array.isRequired,\n  extended: PropTypes.bool.isRequired\n};\n\nComments.defaultProps = {\n  data: [{ user: 'Jan', date: new Date(), comment: 'Yes, cool shit' }],\n  extended: false\n};\n\nvar SkillBar = function SkillBar(_ref12) {\n  var data = _ref12.data;\n\n  var scale = d3.scaleLinear().domain(d3.extent(data, function (d) {\n    return d.level;\n  })).range([30, 100]);\n\n  // console.log('scale', scale.domain());\n\n  return React.createElement(\n    'div',\n    { style: { display: 'flex' } },\n    data.map(function (d) {\n      return React.createElement(\n        'div',\n        {\n          className: skillColorScale(d.type) + ' ' + cx.textTrunc,\n          style: {\n            width: scale(d.level) + '%',\n            height: '30px',\n            display: 'inline-flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        },\n        React.createElement(\n          'span',\n          null,\n          d.type\n        )\n      );\n    })\n  );\n};\n\nSkillBar.propTypes = { data: PropTypes.array };\n\nSkillBar.defaultProps = { data: [] };\n\nvar CardStack = function CardStack(_ref13) {\n  var number = _ref13.number;\n  return (\n    // const scale = d3\n    //   .scaleLinear()\n    //   .domain([0])\n    //   .range([30, 100]);\n\n    React.createElement(\n      'div',\n      { style: { display: 'flex' } },\n      d3.range(0, number).map(function () {\n        return React.createElement(\n          'div',\n          { style: { width: 2 + '%' } },\n          React.createElement(CardMarker, { width: 30 })\n        );\n      })\n    )\n  );\n};\n\nCardStack.propTypes = {\n  number: PropTypes.number\n};\n\nCardStack.defaultProps = { number: 0 };\n\nvar Author = function Author(_ref14) {\n  var extended = _ref14.extended,\n      onClose = _ref14.onClose,\n      profile = _objectWithoutProperties(_ref14, ['extended', 'onClose']);\n\n  var name = profile.name,\n      skills = profile.skills,\n      activity = profile.activity,\n      interests = profile.interests;\n\n  if (!extended) {\n    return React.createElement(\n      'fieldset',\n      { className: cx.field },\n      React.createElement(\n        'legend',\n        null,\n        'Author:'\n      ),\n      React.createElement(\n        'div',\n        {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%'\n          }\n        },\n        React.createElement('img', {\n          className: '' + cx.avatar,\n          width: '80%',\n          height: '80%',\n          src: profileSrc(),\n          alt: 'alt'\n        })\n      )\n    );\n  }\n  return React.createElement(\n    'div',\n    {\n      style: {\n        display: 'flex',\n        position: 'relative',\n        justifyContent: 'center',\n        // alignItems: 'center',\n        flexDirection: 'column'\n      },\n      className: 'mt-3'\n    },\n    React.createElement(\n      'button',\n      {\n        type: 'button',\n        className: 'close ',\n        style: { position: 'absolute', top: 0 },\n        'data-dismiss': 'modal',\n        'aria-label': 'Close',\n        onClick: onClose\n      },\n      React.createElement(\n        'span',\n        { 'aria-hidden': 'true' },\n        '\\xD7'\n      )\n    ),\n    React.createElement('img', {\n      className: '' + cx.avatar,\n      style: { alignSelf: 'center' },\n      width: '40%',\n      height: '40%',\n      src: profileSrc(),\n      alt: 'alt'\n    }),\n    React.createElement(\n      'div',\n      { className: 'mt-2', style: { fontSize: '14px', fontWeight: 700 } },\n      'Personal'\n    ),\n    React.createElement(\n      'fieldset',\n      { className: cx.field },\n      React.createElement(\n        'legend',\n        null,\n        'Interests:'\n      ),\n      React.createElement(SkillBar, { data: interests })\n    ),\n    React.createElement(\n      'fieldset',\n      { className: cx.field },\n      React.createElement(\n        'legend',\n        null,\n        'skills:'\n      ),\n      React.createElement(SkillBar, { data: skills })\n    ),\n    React.createElement(\n      'div',\n      { className: 'mt-2', style: { fontSize: '14px', fontWeight: 700 } },\n      'Activity'\n    ),\n    React.createElement(\n      'fieldset',\n      { className: cx.field },\n      React.createElement(\n        'legend',\n        null,\n        'Collected Cards:'\n      ),\n      React.createElement(CardStack, { number: 30 })\n    ),\n    React.createElement(\n      'fieldset',\n      { className: cx.field },\n      React.createElement(\n        'legend',\n        null,\n        'Created Cards:'\n      ),\n      React.createElement(CardStack, { number: 14 })\n    )\n  );\n};\n\n// Author.propTypes = {\n//   //  profile: PropTypes.shape({\n//   name: PropTypes.string,\n//   skills: PropTypes.array(\n//     PropTypes.shape({ name: PropTypes.string, level: PropTypes.number })\n//   ),\n//   activity: PropTypes.object(\n//     PropTypes.shape({\n//       collectedCards: PropTypes.number,\n//       createdCards: PropTypes.number\n//     })\n//   ),\n//   extended: PropTypes.bool\n// };\n\nAuthor.defaultProps = {\n  // profile: {\n  name: 'jan',\n  skills: [{ type: 'arts', level: 22 }, { type: 'music', level: 14 }, { type: 'sports', level: 10 }],\n  interests: [{ type: 'movies', level: 12 }, { type: 'football', level: 5 }, { type: 'xbox', level: 10 }],\n  activity: { collectedCards: 20, createdCards: 13 },\n  // },\n  extended: false\n};\n\nvar Profile = function Profile(_ref15) {\n  var data = _ref15.data;\n  return React.createElement(\n    'div',\n    { className: 'media mt-3' },\n    React.createElement('img', {\n      className: 'd-flex mr-3 ' + cx.avatar,\n      width: 64,\n      height: 64,\n      src: profileSrc(),\n      alt: 'alt'\n    }),\n    React.createElement(\n      'div',\n      { className: 'media-body' },\n      React.createElement(\n        'div',\n        { className: cx.textClamp },\n        data.comment\n      ),\n      React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'small',\n          { className: 'font-italic' },\n          '- ',\n          data.name\n        )\n      )\n    )\n  );\n};\n\nProfile.propTypes = {\n  data: PropTypes.object.isRequired\n};\nProfile.defaultProps = {\n  data: {}\n};\n\n// TODO; rempve\nProfile.defaultProps = { name: 'jan', comment: 'yeah' };\n\nvar ReadCardBack = (_temp3 = _class3 = function (_Component3) {\n  _inherits(ReadCardBack, _Component3);\n\n  function ReadCardBack(props) {\n    _classCallCheck(this, ReadCardBack);\n\n    var _this4 = _possibleConstructorReturn(this, (ReadCardBack.__proto__ || _Object$getPrototypeOf(ReadCardBack)).call(this, props));\n\n    _this4.state = { extended: null };\n    return _this4;\n  }\n\n  _createClass(ReadCardBack, [{\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var _props2 = this.props,\n          challenge = _props2.challenge,\n          comments = _props2.comments,\n          media = _props2.media,\n          cardSets = _props2.cardSets,\n          linkedCards = _props2.linkedCards,\n          loc = _props2.loc,\n          author = _props2.author;\n      var extended = this.state.extended;\n\n      var selectField = function selectField(field) {\n        return function () {\n          return _this5.setState(function (prevstate) {\n            return {\n              extended: prevstate.extended !== field ? field : null\n            };\n          });\n        };\n      };\n\n      var setSizeProps = function setSizeProps(field) {\n        if (field === extended) return {\n          colSpan: 2,\n          rowSpan: 3\n        };\n        return {};\n      };\n      var isHidden = function isHidden(field) {\n        return extended !== null && extended !== field;\n      };\n      var display = function display(field) {\n        return {\n          display: isHidden(field) ? 'none' : null\n        };\n      };\n\n      return React.createElement(\n        'div',\n        {\n          className: 'container ' + cx.cardMini2 + ' ',\n          style: {\n            height: '90%',\n            zIndex: -10\n          }\n        },\n        React.createElement(\n          Grid,\n          { cols: 2, rows: 3, gap: 1 },\n          React.createElement(\n            'div',\n            _extends({}, setSizeProps('author'), {\n              style: display('author'),\n              onClick: selectField('author')\n            }),\n            React.createElement(Author, _extends({}, author, {\n              extended: extended === 'author',\n              onClose: function onClose() {\n                // TODO\n                // console.log('onCLose');\n                // this.setState({ extended: null });\n              }\n            }))\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('map') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('map')\n              }, setSizeProps('map')),\n              React.createElement(\n                'legend',\n                null,\n                'Map:'\n              ),\n              React.createElement(\n                Wrapper,\n                null,\n                function (width, height) {\n                  return React.createElement(MapGL, {\n                    width: width,\n                    height: height,\n                    latitude: loc.latitude,\n                    longitude: loc.longitude,\n                    zoom: 8\n                  });\n                }\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('cardSets') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('cardSets')\n              }, setSizeProps('cardSets')),\n              React.createElement(\n                'legend',\n                null,\n                'Cardsets:'\n              ),\n              React.createElement(Tags, { data: cardSets })\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('linkedCards') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('linkedCards')\n              }, setSizeProps('linkedCards')),\n              React.createElement(\n                'legend',\n                null,\n                'Linked Cards'\n              ),\n              React.createElement(\n                'div',\n                null,\n                React.createElement(Tags, { data: linkedCards })\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('comments'), colSpan: 2 },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('comments')\n              }, setSizeProps('comments')),\n              React.createElement(\n                'legend',\n                null,\n                'Comments:'\n              ),\n              React.createElement(Comments, { data: comments })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReadCardBack;\n}(Component), _class3.propTypes = {\n  key: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  challenge: PropTypes.object.isRequired,\n  author: PropTypes.object.isRequired,\n  flipHandler: PropTypes.func.isRequired,\n  cardSets: PropTypes.array,\n  linkedCards: PropTypes.array,\n  loc: PropTypes.shape({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number\n  }),\n  media: PropTypes.array.isRequired\n}, _temp3);\n\n\nReadCardBack.defaultProps = {\n  challenge: { type: '0' },\n  comments: Comments.defaultProps.data,\n  media: Media.defaultProps.data,\n  cardSets: ['testseries', 'pirateSet'],\n  linkedCards: ['Captain hook', 'yeah'],\n  loc: { latitude: 0, longitude: 0 },\n  author: Profile.defaultProps.data\n};\n\nvar EditableCardBack = (_temp4 = _class4 = function (_Component4) {\n  _inherits(EditableCardBack, _Component4);\n\n  function EditableCardBack(props) {\n    _classCallCheck(this, EditableCardBack);\n\n    var _this6 = _possibleConstructorReturn(this, (EditableCardBack.__proto__ || _Object$getPrototypeOf(EditableCardBack)).call(this, props));\n\n    _this6.state = { extended: null };\n    return _this6;\n  }\n\n  _createClass(EditableCardBack, [{\n    key: 'render',\n    value: function render() {\n      var _this7 = this;\n\n      var _props3 = this.props,\n          challenge = _props3.challenge,\n          media = _props3.media,\n          cardSets = _props3.cardSets,\n          linkedCards = _props3.linkedCards,\n          loc = _props3.loc;\n      var extended = this.state.extended;\n\n      var selectField = function selectField(field) {\n        return function () {\n          return _this7.setState(function (prevstate) {\n            return {\n              extended: prevstate.extended !== field ? field : null\n            };\n          });\n        };\n      };\n\n      var setSizeProps = function setSizeProps(field) {\n        if (field === extended) return {\n          colSpan: 2,\n          rowSpan: 3\n        };\n        return {};\n      };\n      var isHidden = function isHidden(field) {\n        return extended !== null && extended !== field;\n      };\n      var display = function display(field) {\n        return {\n          display: isHidden(field) ? 'none' : null\n        };\n      };\n\n      return React.createElement(\n        'div',\n        {\n          className: 'container ' + cx.cardMini2 + ' ',\n          style: {\n            height: '90%',\n            zIndex: -10\n          }\n        },\n        React.createElement(\n          Grid,\n          { cols: 2, rows: 3, gap: 1 },\n          React.createElement(\n            'div',\n            { onClick: selectField('author') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('author')\n              }, setSizeProps('author')),\n              React.createElement(\n                'legend',\n                null,\n                'Author:'\n              ),\n              React.createElement(\n                'div',\n                { style: { display: 'flex' } },\n                React.createElement(\n                  'div',\n                  null,\n                  'Placeholder'\n                ),\n                React.createElement(EditButton, {\n                  onClick: function onClick() {\n                    return _this7.setState({\n                      dialog: { title: 'author', id: 'author', data: '' }\n                    });\n                  }\n                })\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('map') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('map')\n              }, setSizeProps('map')),\n              React.createElement(\n                'legend',\n                null,\n                'Map:'\n              ),\n              React.createElement(\n                Wrapper,\n                null,\n                function (width, height) {\n                  return React.createElement(MapGL, {\n                    width: width,\n                    height: height,\n                    latitude: loc.latitude,\n                    longitude: loc.longitude,\n                    zoom: 8\n                  });\n                }\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('cardSets') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('cardSets')\n              }, setSizeProps('cardSets')),\n              React.createElement(\n                'legend',\n                null,\n                'Cardsets:'\n              ),\n              React.createElement(Tags, { data: cardSets }),\n              React.createElement(EditButton, {\n                onClick: function onClick() {\n                  return _this7.setState({\n                    dialog: { title: 'author', id: 'author', data: '' }\n                  });\n                }\n              })\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('linkedCards') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                className: cx.field,\n                style: display('linkedCards')\n              }, setSizeProps('linkedCards')),\n              React.createElement(\n                'legend',\n                null,\n                'Linked Cards'\n              ),\n              React.createElement(\n                'div',\n                null,\n                React.createElement(Tags, { data: linkedCards })\n              )\n            )\n          ),\n          React.createElement(\n            'div',\n            { onClick: selectField('comments') },\n            React.createElement(\n              'fieldset',\n              _extends({\n                colSpan: 2,\n                className: cx.field,\n                style: display('comments')\n              }, setSizeProps('comments')),\n              React.createElement(\n                'legend',\n                null,\n                'Comments:'\n              ),\n              'Placeholder'\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return EditableCardBack;\n}(Component), _class4.propTypes = {\n  key: PropTypes.string.isRequired,\n  challenge: PropTypes.object.isRequired,\n  author: PropTypes.object.isRequired,\n  flipHandler: PropTypes.func.isRequired,\n  cardSets: PropTypes.object.isRequired,\n  linkedCards: PropTypes.object.isRequireds,\n  loc: PropTypes.shape({\n    latitude: PropTypes.number,\n    longitude: PropTypes.number\n  }),\n  media: PropTypes.array.isRequired\n}, _temp4);\n\n\nfunction CardBack(props) {\n  return props.edit ? React.createElement(EditableCardBack, props) : React.createElement(ReadCardBack, props);\n}\n\n// ReadCardBack.defaultProps = {\n//   key: 'asa',\n//   comments: [\n//     {\n//       user: 'Nils',\n//       img:\n//         'https://placeholdit.imgix.net/~text?txtsize=6&txt=50%C3%9750&w=50&h=50',\n//       comment: 'I did not know that he was such a famous composer',\n//       date: '22/04/2016'\n//     },\n//     {\n//       user: 'Babba',\n//       comment: 'What a nice park, strange, that they put a mask on his face!',\n//       date: '22/04/2016'\n//     }\n//   ],\n//   author: { name: 'jan', comment: 'welcome to my super hard challenge!' }\n// };\n\nvar CollectButton = function CollectButton(_ref16) {\n  var collected = _ref16.collected,\n      onClick = _ref16.onClick,\n      expPoints = _ref16.expPoints;\n  return React.createElement(\n    'div',\n    { className: 'p-1 pt-3' },\n    React.createElement(\n      'button',\n      {\n        className: 'btn btn-secondary btn-lg btn-block}',\n        style: { width: '100%', alignSelf: 'flex-end' },\n        onClick: onClick\n      },\n      React.createElement(\n        'div',\n        { style: { display: 'flex', justifyContent: 'center' } },\n        React.createElement(\n          'span',\n          null,\n          'Collect'\n        ),\n        React.createElement(\n          'div',\n          {\n            style: {\n              marginLeft: '4px',\n              paddingLeft: '4px',\n              paddingRight: '4px',\n              border: '1px black solid',\n              borderRadius: '5px'\n            }\n          },\n          expPoints + 'xp'\n        )\n      )\n    )\n  );\n};\n\nCollectButton.propTypes = {\n  dataTarget: PropTypes.string,\n  collected: PropTypes.bool,\n  onClick: PropTypes.func,\n  expPoints: PropTypes.number\n};\n\nCollectButton.defaultProps = {\n  collected: false,\n  toggleCardChallenge: function toggleCardChallenge(d) {\n    return d;\n  },\n  expPoints: 60\n};\n\nvar Card = (_temp5 = _class5 = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    var _this8 = _possibleConstructorReturn(this, (Card.__proto__ || _Object$getPrototypeOf(Card)).call(this, props));\n\n    _this8.state = {\n      frontView: true\n    };\n    return _this8;\n  }\n\n  _createClass(Card, [{\n    key: 'render',\n    value: function render() {\n      var _this9 = this;\n\n      var _props4 = this.props,\n          style = _props4.style,\n          editable = _props4.editable,\n          challenge = _props4.challenge;\n      var frontView = this.state.frontView;\n      // const { onClose } = this.props;\n\n      var sideToggler = frontView ? cx.flipAnim : null;\n      var onCollect = this.props.onCollect;\n\n      var flipHandler = function flipHandler() {\n        _this9.setState(function (oldState) {\n          return {\n            frontView: !oldState.frontView\n          };\n        });\n      };\n      var color = colorScale(challenge.type);\n      var togglecard = function togglecard() {\n        if (frontView) return React.createElement(\n          CardFrame,\n          _extends({}, _this9.props, { flipHandler: flipHandler, color: color }),\n          React.createElement(CardFront, _extends({}, _this9.props, {\n            edit: editable,\n            onCollect: onCollect,\n            color: color\n          }))\n        );\n        return React.createElement(\n          CardFrame,\n          _extends({}, _this9.props, { flipHandler: flipHandler, color: color }),\n          React.createElement(CardBack, _extends({}, _this9.props, { edit: editable }))\n        );\n      };\n\n      // console.log('ToggleCard', ToggleCard);\n\n      return React.createElement(\n        'div',\n        { className: cx.flipContainer + ' ' + sideToggler, style: style },\n        React.createElement(\n          'div',\n          {\n            className: cx.flipper + ' ' + sideToggler,\n            style: {\n              background: color\n            }\n          },\n          togglecard()\n        )\n      );\n    }\n  }]);\n\n  return Card;\n}(React.Component), _class5.propTypes = {\n  onClose: PropTypes.oneOf([null, PropTypes.func]),\n  collectHandler: PropTypes.oneOf([null, PropTypes.func]),\n  style: PropTypes.object,\n  editable: PropTypes.bool\n}, _class5.defaultProps = {\n  onClose: function onClose(d) {\n    return d;\n  },\n  collectHandler: null,\n  style: {},\n  editable: false\n}, _temp5);\n\n\nCard.propTypes = _extends({}, ReadCardFront.propTypes, ReadCardBack.propTypes);\n\nCard.defaultProps = _extends({}, ReadCardFront.defaultProps, ReadCardBack.defaultProps);\n\nvar TagInput = (_temp6 = _class6 = function (_React$Component2) {\n  _inherits(TagInput, _React$Component2);\n\n  function TagInput(props) {\n    _classCallCheck(this, TagInput);\n\n    var _this10 = _possibleConstructorReturn(this, (TagInput.__proto__ || _Object$getPrototypeOf(TagInput)).call(this, props));\n\n    var tags = props.tags;\n\n    _this10.state = {\n      tags: tags.map(function (text, i) {\n        return { id: i, text: text };\n      }),\n      suggestions: ['Belgium', 'Germany', 'Brazil']\n    };\n    _this10.handleDelete = _this10.handleDelete.bind(_this10);\n    _this10.handleAddition = _this10.handleAddition.bind(_this10);\n    _this10.handleDrag = _this10.handleDrag.bind(_this10);\n    return _this10;\n  }\n\n  _createClass(TagInput, [{\n    key: 'handleDelete',\n    value: function handleDelete(i) {\n      var tags = this.state.tags;\n      tags.splice(i, 1);\n      this.setState({ tags: tags });\n    }\n  }, {\n    key: 'handleAddition',\n    value: function handleAddition(tag) {\n      var tags = this.state.tags;\n      tags.push({\n        id: tags.length + 1,\n        text: tag\n      });\n      this.setState({ tags: tags });\n    }\n  }, {\n    key: 'handleDrag',\n    value: function handleDrag(tag, currPos, newPos) {\n      var tags = this.state.tags;\n\n      // mutate array\n      tags.splice(currPos, 1);\n      tags.splice(newPos, 0, tag);\n\n      // re-render\n      this.setState({ tags: tags });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          tags = _state.tags,\n          suggestions = _state.suggestions;\n      var _onSubmit = this.props.onSubmit;\n\n\n      return React.createElement(\n        ModalHeaderFooter,\n        { onSubmit: function onSubmit() {\n            return _onSubmit(tags.map(function (d) {\n              return d.text;\n            }));\n          } },\n        React.createElement(ReactTags, {\n          classNames: {\n            tags: 'tagsClass',\n            tagInput: 'tagInputClass',\n            tagInputField: 'tagInputFieldClass',\n            selected: 'selectedClass',\n            tag: cx.tag + ' ' + colorScaleRandom(),\n            remove: 'removeClass',\n            suggestions: 'suggestionsClass',\n            activeSuggestion: 'activeSuggestionClass'\n          },\n          tags: tags,\n          suggestions: suggestions,\n          handleDelete: this.handleDelete,\n          handleAddition: this.handleAddition,\n          handleDrag: this.handleDrag\n        })\n      );\n    }\n  }]);\n\n  return TagInput;\n}(React.Component), _class6.propTypes = {\n  values: PropTypes.array,\n  onSubmit: PropTypes.func\n}, _temp6);\n\n// CardCont.defaultProps = {\n//   selected: true\n// };\n\n// CardCont.propTypes = { selected: PropTypes.bool };\n\nexport { Card, PreviewCard, TagInput };\n;\n\nvar _temp7 = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(random, 'random', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(profileSrc, 'profileSrc', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(mediaScale, 'mediaScale', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(colorScale, 'colorScale', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(colorScaleRandom, 'colorScaleRandom', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(skillColorScale, 'skillColorScale', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(colorClass, 'colorClass', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(defaultProps, 'defaultProps', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(EditButton, 'EditButton', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(Media, 'Media', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(SmallModal, 'SmallModal', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(ModalHeaderFooter, 'ModalHeaderFooter', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(ReadCardFront, 'ReadCardFront', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(MediaSearch, 'MediaSearch', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(EditableCardFront, 'EditableCardFront', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(CardFront, 'CardFront', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(Tags, 'Tags', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(PreviewTags, 'PreviewTags', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(PreviewCard, 'PreviewCard', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(CardFrame, 'CardFrame', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(Comments, 'Comments', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(SkillBar, 'SkillBar', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(CardStack, 'CardStack', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(Author, 'Author', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(Profile, 'Profile', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(ReadCardBack, 'ReadCardBack', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(EditableCardBack, 'EditableCardBack', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(CardBack, 'CardBack', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(CollectButton, 'CollectButton', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(Card, 'Card', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n\n  __REACT_HOT_LOADER__.register(TagInput, 'TagInput', '/home/djan/dev/TickleClient/src/components/cards/index.jsx');\n}();\n\n;",{"version":3,"sources":["src/components/cards/index.jsx"],"names":["React","Component","ReacDOM","PropTypes","d3","MapGL","WithContext","ReactTags","Grid","chromatic","CardMarker","challengeTypes","mediaTypes","skillTypes","cx","colorClasses","Wrapper","random","Math","profileSrc","gender","i","round","mediaScale","scaleOrdinal","domain","range","colorScale","schemePastel1","colorScaleRandom","scaleLinear","length","clamp","skillColorScale","colorClass","title","defaultProps","challenge","type","date","tags","img","xpPoints","description","loc","latitude","longitude","place","creator","radius","media","name","src","comments","user","comment","cardSets","linkedCards","EditButton","style","onClick","cursor","propTypes","object","func","Media","data","map","m","array","isRequired","extended","SmallModal","visible","children","onClose","onSave","createPortal","width","height","background","opacity","transition","zIndex","left","top","position","display","document","querySelector","bool","string","node","ModalHeaderFooter","onSubmit","ReadCardFront","edit","onCollect","cardDetail","flexDirection","justifyContent","field","textClamp","MediaSearch","EditableCardFront","props","state","dialog","nodeDescription","modalVisible","id","setFieldState","setState","oldState","modalContent","newTags","value","n","fontSize","alignContent","alignItems","alignSelf","marginLeft","paddingLeft","paddingRight","CardFront","Tags","t","tag","PreviewTags","textTrunc","PreviewCard","nextProps","selected","cardMini2","cardHeader","maxWidth","CardFrame","flipHandler","overflow","Comments","avatar","Date","SkillBar","scale","extent","d","level","CardStack","number","Author","profile","skills","activity","interests","fontWeight","collectedCards","createdCards","Profile","ReadCardBack","author","selectField","prevstate","setSizeProps","colSpan","rowSpan","isHidden","key","shape","EditableCardBack","isRequireds","CardBack","CollectButton","collected","expPoints","border","borderRadius","dataTarget","toggleCardChallenge","Card","frontView","editable","sideToggler","flipAnim","color","togglecard","flipContainer","flipper","oneOf","collectHandler","TagInput","text","suggestions","handleDelete","bind","handleAddition","handleDrag","splice","push","currPos","newPos","tagInput","tagInputField","remove","activeSuggestion","values"],"mappings":"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","file":"index.jsx","sourceRoot":"/home/djan/dev/TickleClient","sourcesContent":["import React, { Component } from 'react';\nimport ReacDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport MapGL from 'react-map-gl';\nimport { WithContext as ReactTags } from 'react-tag-input';\nimport Grid from 'mygrid/dist';\n// TODO: replace\nimport * as chromatic from 'd3-scale-chromatic';\n// import ClampLines from 'react-clamp-lines';\nimport 'w3-css';\n// import 'react-tagsinput/react-tagsinput.css'; // If using WebPack and style-loader.\n\nimport { CardMarker } from '../utils/map-layers/DivOverlay';\nimport { challengeTypes, mediaTypes, skillTypes } from '../../dummyData';\nimport cx from './Card.scss';\nimport colorClasses from '../colorClasses';\n// import StarRating from './utils/StarRating';\n// import exampleImg from './example_challenge.jpg';\nimport { Wrapper } from '../utils';\n\nconst random = () => Math.random() * 1000;\n\nconst profileSrc = () => {\n  const gender = Math.random() < 0.5 ? 'men' : 'women';\n  const i = Math.round(Math.random() * 100);\n  return `https://randomuser.me/api/portraits/thumb/${gender}/${i}.jpg`;\n};\n// console.log('colorClasses', colorClasses);\n\nconst mediaScale = d3\n  .scaleOrdinal()\n  .domain(mediaTypes)\n  .range(['fa-gamepad', 'fa-link', 'fa-camera', 'fa-video-camera']);\n\n// console.log('mediaScale', mediaScale('hyperlink'));\nconst colorScale = d3\n  .scaleOrdinal()\n  .domain(challengeTypes)\n  .range(chromatic.schemePastel1);\n\nconst colorScaleRandom = d3\n  .scaleLinear()\n  .domain(d3.range(colorClasses.length))\n  .range(colorClasses)\n  .clamp(true);\n\nconst skillColorScale = d3\n  .scaleOrdinal()\n  .domain(skillTypes)\n  .range(colorClasses);\n\nconst colorClass = (title = 'title') =>\n  colorScaleRandom(title.length % colorClasses.length);\n\nconst defaultProps = {\n  title: 'The peculiar story of Arthur De Greef',\n  challenge: { type: 'gap text' },\n  date: '28/04/2012 10:00',\n  tags: ['Art', 'Culture', 'Music'],\n  img:\n    'https://drive.google.com/uc?export=view&id=1N9Ed6a_CDa8SEMZeLaxULF4FtkHBQf4Feg',\n  xpPoints: 100,\n  // TODO: remove in future to component\n  description:\n    '\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"',\n  loc: { latitude: 50.828797, longitude: 4.352191 },\n  place: 'Park next to my Home',\n  creator: 'Jan',\n  radius: 400,\n  media: [\n    {\n      type: 'photo',\n      name: 'franz-liszt---the-first-rock-star',\n      src: ''\n    },\n    {\n      type: 'hyperlink',\n      name: 'franz-liszt---the-first-rock-star',\n      src: ''\n    },\n    {\n      type: 'game',\n      name: 'franz-liszt---the-first-rock-star',\n      src: ''\n    }\n  ],\n  comments: [\n    {\n      user: 'Nils',\n      comment: 'I did not know that he was such a famous composer'\n    },\n    {\n      user: 'Babba',\n      comment: 'What a nice park, strange, that they put a mask on his face!'\n    }\n  ],\n  cardSets: ['european_composers'],\n  linkedCards: ['Frank Liszt', 'Music school Arthur de Greef']\n};\n\nconst EditButton = ({ style, onClick }) => (\n  <i\n    className=\"fa fa-2x fa-pencil-square-o ml-1\"\n    style={{ cursor: 'pointer', ...style }}\n    onClick={onClick}\n  />\n);\n\nEditButton.propTypes = {\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nEditButton.defaultProps = { style: {}, onClick: () => null };\n\nconst Media = ({ data }) => (\n  <Grid cols={data.length} rows={1}>\n    {data.map(m => (\n      <div key={m.src + random()}>\n        <div className=\"mr-1 row\">\n          <i\n            className={`fa ${mediaScale(m.type)} fa-2x col-1`}\n            aria-hidden=\"true\"\n          />\n          <div className=\"ml-1 col\">\n            <a href={m.src}>name</a>\n          </div>\n        </div>\n      </div>\n    ))}\n  </Grid>\n);\n\nMedia.propTypes = {\n  data: PropTypes.array.isRequired\n  // extended: PropTypes.bool\n};\n\nMedia.defaultProps = { data: defaultProps.media, extended: false };\n\nconst SmallModal = ({ visible, title, children, onClose, onSave }) =>\n  ReacDOM.createPortal(\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0, 0, 0, 0.5)',\n        opacity: visible ? 1 : 0,\n        transition: 'opacity 1s',\n        zIndex: visible ? '4000' : '-10',\n        left: 0,\n        top: 0,\n        position: 'absolute'\n      }}\n    >\n      <div\n        className=\"modal fade show\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n        style={{\n          opacity: visible ? 1 : 0,\n          display: visible ? 'block' : 'none'\n        }}\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                {title}\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={onClose}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.querySelector('body')\n  );\n\nSmallModal.propTypes = {\n  visible: PropTypes.bool,\n  title: PropTypes.string,\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n  onSave: PropTypes.func\n};\nSmallModal.defaultProps = {\n  visible: true,\n  title: '-',\n  children: <div>{'test'}</div>,\n  onClose: () => null,\n  onSave: () => null\n};\n\nconst ModalHeaderFooter = ({ children, onSubmit }) => (\n  <div>\n    <div className=\"modal-body\">{children}</div>\n    <div className=\"modal-footer\">\n      <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">\n        Close\n      </button>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={onSubmit}>\n        Save changes\n      </button>\n    </div>\n  </div>\n);\n\nModalHeaderFooter.propTypes = {\n  children: PropTypes.node.isRequired,\n  onSubmit: PropTypes.func\n};\n\nModalHeaderFooter.defaultProps = {\n  onSubmit: () => null\n};\n\nconst ReadCardFront = ({\n  tags,\n  img,\n  description,\n  media,\n  // children,\n  edit,\n  onCollect\n}) => (\n  <div\n    className={cx.cardDetail}\n    style={{\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '90%'\n    }}\n  >\n    <PreviewTags data={tags} />\n    <div className=\"mt-1 mb-1\">\n      <img src={img} alt=\"Card img\" style={{ width: '100%', height: '100%' }} />\n    </div>\n    <div>\n      <fieldset className={cx.field}>\n        <legend>description</legend>\n        <div className={cx.textClamp}>{description}</div>\n      </fieldset>\n    </div>\n    <div>\n      <fieldset className={cx.field}>\n        <legend>Media:</legend>\n        <Media data={media} />\n      </fieldset>\n    </div>\n    {/* TODO: change by real check */}\n    {!edit ? <CollectButton onClick={onCollect} /> : null}\n  </div>\n);\n\nReadCardFront.propTypes = {\n  description: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  onCollect: PropTypes.func,\n  children: PropTypes.array\n};\n\nReadCardFront.defaultProps = { ...defaultProps, onCollect: null };\n\nconst MediaSearch = ({ media, onSubmit }) => (\n  <ModalHeaderFooter>\n    <div style={{ width: '100%' }}>\n      <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n        <li className=\"nav-item\">\n          <a\n            className=\"nav-link active\"\n            id=\"pills-home-tab\"\n            data-toggle=\"pill\"\n            href=\"#pills-home\"\n            role=\"tab\"\n            aria-controls=\"pills-home\"\n            aria-selected=\"true\"\n          >\n            <i className={`fa fa-link fa-2x col-1`} aria-hidden=\"true\" />\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className=\"nav-link\"\n            id=\"pills-profile-tab\"\n            data-toggle=\"pill\"\n            href=\"#pills-profile\"\n            role=\"tab\"\n            aria-controls=\"pills-profile\"\n            aria-selected=\"false\"\n          >\n            <i className={`fa fa-camera fa-2x col-1`} aria-hidden=\"true\" />\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className=\"nav-link\"\n            id=\"pills-contact-tab\"\n            data-toggle=\"pill\"\n            href=\"#pills-contact\"\n            role=\"tab\"\n            aria-controls=\"pills-contact\"\n            aria-selected=\"false\"\n          >\n            <i\n              className={`fa fa-video-camera fa-2x col-1`}\n              aria-hidden=\"true\"\n            />\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\" id=\"pills-tabContent\">\n        <div\n          className=\"tab-pane fade show active\"\n          id=\"pills-home\"\n          role=\"tabpanel\"\n          aria-labelledby=\"pills-home-tab\"\n        />\n        <div\n          className=\"tab-pane fade\"\n          id=\"pills-profile\"\n          role=\"tabpanel\"\n          aria-labelledby=\"pills-profile-tab\"\n        >\n          ...\n        </div>\n        <div\n          className=\"tab-pane fade\"\n          id=\"pills-contact\"\n          role=\"tabpanel\"\n          aria-labelledby=\"pills-contact-tab\"\n        >\n          ...\n        </div>\n      </div>\n    </div>\n  </ModalHeaderFooter>\n);\n\nMediaSearch.propTypes = {\n  media: PropTypes.array.isRequired,\n  onSubmit: PropTypes.func\n};\n\nMediaSearch.defaultProps = { onSubmit: () => null };\n\nclass EditableCardFront extends Component {\n  static propTypes = ReadCardFront.propTypes;\n  static defaultProps = ReadCardFront.defaultProps;\n\n  constructor(props) {\n    super(props);\n    this.state = { data: { ...props }, dialog: null };\n    this.nodeDescription = null;\n  }\n\n  render() {\n    // console.log('hey', this.props);\n    //\n    const { data } = this.state;\n    const { tags, img, description, media, children, challenge } = data;\n    const { dialog } = this.state;\n    const modalVisible = dialog !== null;\n    const id = dialog !== null ? dialog.id : null;\n    // const modalStyle = modalVisible\n    //   ? { background: 'black', opacity: 0.5 }\n    //   : {};\n    const setFieldState = field =>\n      this.setState(oldState => ({\n        data: { ...oldState.data, ...field }\n      }));\n    const modalContent = () => {\n      switch (id) {\n        case 'tags':\n          return (\n            <TagInput\n              tags={tags}\n              onSubmit={newTags => setFieldState({ tags: newTags })}\n            />\n          );\n        case 'photo':\n          return <div>photo</div>;\n        case 'description':\n          return (\n            <ModalHeaderFooter\n              onSubmit={() =>\n                setFieldState({ description: this.nodeDescription.value })\n              }\n            >\n              <div className=\"form-group\">\n                <textarea\n                  ref={n => (this.nodeDescription = n)}\n                  style={{ width: '100%' }}\n                  onSubmit={() => null}\n                >\n                  {description}\n                </textarea>\n              </div>\n            </ModalHeaderFooter>\n          );\n        case 'media':\n          return (\n            <div>\n              <MediaSearch media={media} onSubmit={() => null} />\n            </div>\n          );\n        case 'challenge':\n          return <div>challenge</div>;\n        default:\n          return <div>error</div>;\n      }\n    };\n    return (\n      <div style={{ height: '100%' }}>\n        <SmallModal\n          visible={modalVisible}\n          title={modalVisible ? dialog.title : ''}\n          onClose={() => this.setState({ dialog: null })}\n        >\n          {modalContent()}\n        </SmallModal>\n        <div\n          className={cx.cardDetail}\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            // justifyContent: 'space-between',\n            height: '90%'\n          }}\n        >\n          <div style={{ display: 'flex' }}>\n            <PreviewTags data={tags} />\n            <i\n              style={{ fontSize: '24px', cursor: 'pointer' }}\n              className=\"fa fa-pencil-square-o ml-1\"\n              onClick={() =>\n                this.setState({\n                  dialog: { title: 'Tags', id: 'tags', data: tags }\n                })\n              }\n            />\n          </div>\n          <div className=\"mt-1 mb-1\">\n            <div\n              alt=\"Card cap\"\n              style={{\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                alignContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <div className=\"mt-1 mb-1\">\n                <img\n                  src=\"http://via.placeholder.com/450x270\"\n                  alt=\"Card img\"\n                  style={{ width: '100%', height: '100%' }}\n                />\n              </div>\n            </div>\n          </div>\n          <div style={{ height: '20%' }}>\n            <fieldset className={`${cx.field}`} style={{ height: '90%' }}>\n              <legend>description</legend>\n              <div\n                style={{ display: 'flex', alignContent: 'end', height: '100%' }}\n              >\n                <div className={cx.textClamp} style={{ height: '100%' }}>\n                  {description}\n                </div>\n                <div>\n                  <EditButton\n                    onClick={() =>\n                      this.setState({\n                        dialog: {\n                          title: 'Description',\n                          id: 'description',\n                          data: description\n                        }\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            </fieldset>\n          </div>\n          <div style={{ height: '15%' }}>\n            <fieldset className={cx.field}>\n              <legend>Media:</legend>\n              <div style={{ display: 'flex', alignContent: 'end' }}>\n                <Media />\n                <div>\n                  <EditButton\n                    onClick={() =>\n                      this.setState({\n                        dialog: { title: 'Media', id: 'media', data: media }\n                      })\n                    }\n                  />\n                </div>\n              </div>\n            </fieldset>\n          </div>\n          <div>\n            <div style={{ display: 'flex', alignContent: 'end' }}>\n              <div className=\"p-1 pt-3\" style={{ width: '100%' }}>\n                <button\n                  className={`btn btn-secondary btn-lg btn-block}`}\n                  style={{ width: '100%', alignSelf: 'flex-end' }}\n                  onClick={() =>\n                    this.setState({\n                      dialog: {\n                        title: 'Challenge',\n                        id: 'challenge',\n                        data: challenge\n                      }\n                    })\n                  }\n                >\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignContent: 'center'\n                    }}\n                  >\n                    <div>{'Challenge'}</div>\n                    <div\n                      style={{\n                        marginLeft: '4px',\n                        paddingLeft: '4px',\n                        paddingRight: '4px'\n                      }}\n                    >\n                      <EditButton />\n                    </div>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nEditableCardFront.defaultProps = defaultProps;\n\nfunction CardFront(props) {\n  return props.edit ? (\n    <EditableCardFront {...props} />\n  ) : (\n    <ReadCardFront {...props} />\n  );\n}\n\nCardFront.propTypes = { ...ReadCardFront.propTypes, edit: PropTypes.bool };\n\nCardFront.defaultProps = { edit: false };\n\n// const EditableCardFront = ({ tags, img, description, media, children }) => (\n//   <div\n//     className={cx.cardDetail}\n//     style={{\n//       display: 'flex',\n//       flexDirection: 'column',\n//       // justifyContent: 'space-between',\n//       height: '90%'\n//     }}\n//   >\n//     <PreviewTags data={tags} />\n//     <div className=\"mt-1 mb-1\">\n//       <div\n//         alt=\"Card cap\"\n//         style={{\n//           width: '100%',\n//           height: '100%',\n//           display: 'flex',\n//           alignContent: 'center',\n//           alignItems: 'center'\n//         }}\n//       >\n//         <div className=\"mt-1 mb-1\">\n//           <img\n//             src=\"http://via.placeholder.com/450x270\"\n//             alt=\"Card img\"\n//             style={{ width: '100%', height: '100%' }}\n//           />\n//         </div>\n//       </div>\n//     </div>\n//     <div>\n//       <fieldset className={cx.field}>\n//         <legend>description</legend>\n//         <textarea className=\"form-control\" rows=\"3\" />\n//       </fieldset>\n//     </div>\n//     <div>\n//       <fieldset className={cx.field}>\n//         <legend>Media:</legend>\n//         <TagInput />\n//       </fieldset>\n//     </div>\n//     <div onClick={() => this.setState({ dialog: true })}>\n//       <fieldset className={cx.field}>\n//         <legend>Challenge:</legend>\n//       </fieldset>\n//     </div>\n//     {children}\n//   </div>\n// );\n\nconst Tags = ({ data }) => (\n  <div className={cx.tags}>\n    {data.map(t => (\n      <div key={t + random()} className={`${cx.tag} ${colorClass(t)}`}>\n        <small>{t}</small>\n      </div>\n    ))}\n  </div>\n);\n\nTags.propTypes = { data: PropTypes.array };\nTags.defaultProps = { data: ['tag1', 'exampleTag'] };\n\nconst PreviewTags = ({ data }) => (\n  <div\n    style={{\n      display: 'flex'\n      // flexWrap: 'no-wrap'\n      // alignItems: 'center'\n    }}\n    className={`${cx.textTrunc} ${cx.tags}`}\n  >\n    {data.map(t => (\n      <small key={t + random()} className={`${cx.tag} ${colorClass(t)}`}>\n        {t}\n      </small>\n    ))}\n  </div>\n);\n\nPreviewTags.propTypes = {\n  data: PropTypes.array\n};\n\nPreviewTags.defaultProps = {\n  data: ['tag', 'tag1', 'tag2']\n};\n\n// const SmallCategories = ({ data }) => (\n//   <div className={`${cx.textTrunc} ${cx.tags}`}>\n//     {data.map(t => (\n//       <small key={t + random()} className={`${cx.tag} ${colorClass(t)}`}>\n//         {t}\n//       </small>\n//     ))}\n//   </div>\n// );\n\nclass PreviewCard extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    tags: PropTypes.array.isRequired,\n    img: PropTypes.string,\n    challenge: PropTypes.func.isRequired,\n    onClick: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    selected: PropTypes.bool\n  };\n\n  static defaultProps = {\n    ...defaultProps,\n    style: {},\n    selected: false\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.selected !== nextProps.selected;\n  }\n\n  render() {\n    const { title, tags, img, challenge, style, onClick } = this.props;\n    return (\n      <div\n        className={cx.cardMini2}\n        style={{\n          ...style,\n          background: colorScale(challenge.type)\n        }}\n        onClick={onClick}\n      >\n        <div className={cx.cardHeader}>\n          <h5 className=\"text-truncate\">{title}</h5>\n        </div>\n        <div>\n          <PreviewTags data={tags} />\n          <div className=\"mt-1 mb-1\">\n            <img\n              style={{\n                display: 'block',\n                maxWidth: '100%',\n                height: 'auto'\n              }}\n              src={img}\n              alt=\"Card cap\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CardFrame = ({\n  title,\n  // img,\n  onClose,\n  challenge,\n  children,\n  flipHandler,\n  edit,\n  style\n  // id\n}) => (\n  <div\n    className={`${cx.cardMini2} `}\n    style={{\n      background: colorScale(challenge.type),\n      overflow: 'hidden',\n      height: '100%',\n      ...style\n    }}\n  >\n    <div className={cx.cardHeader} style={{ display: 'flex' }}>\n      <h3 className=\"text-truncate\">\n        {title}\n        {edit || <EditButton />}\n      </h3>\n      <div className=\"btn-group\">\n        <button className=\"close mr-2\" onClick={onClose}>\n          <i className=\"fa fa-window-close fa-lg\" aria-hidden=\"true\" />\n        </button>\n        <button className=\"close\" onClick={flipHandler}>\n          <i className=\"fa fa-retweet fa-lg\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nCardFrame.propTypes = {\n  title: PropTypes.string,\n  // tags: PropTypes.array,\n  // img: PropTypes.string,\n  flipHandler: PropTypes.func,\n  challenge: PropTypes.object,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  onClose: PropTypes.func,\n  edit: PropTypes.bool\n};\n\nCardFrame.defaultProps = { ...defaultProps, edit: false, onClose: () => null };\n\nconst Comments = ({ data, extended }) => (\n  <div\n    style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n  >\n    {data.map(({ comment, user, date }) => (\n      <div>\n        <img\n          className={`${cx.avatar}`}\n          width={'100%'}\n          height={'100%'}\n          src={profileSrc()}\n          alt=\"alt\"\n        />\n        {extended && (\n          <div className=\"media-body\">\n            <div className={cx.textClamp}>\n              <small>{comment}</small>\n            </div>\n            <div>\n              <small className=\"font-italic\">\n                - {user}, {date}\n              </small>\n            </div>\n          </div>\n        )}\n      </div>\n    ))}\n  </div>\n);\n\nComments.propTypes = {\n  data: PropTypes.array.isRequired,\n  extended: PropTypes.bool.isRequired\n};\n\nComments.defaultProps = {\n  data: [{ user: 'Jan', date: new Date(), comment: 'Yes, cool shit' }],\n  extended: false\n};\n\nconst SkillBar = ({ data }) => {\n  const scale = d3\n    .scaleLinear()\n    .domain(d3.extent(data, d => d.level))\n    .range([30, 100]);\n\n  // console.log('scale', scale.domain());\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {data.map(d => (\n        <div\n          className={`${skillColorScale(d.type)} ${cx.textTrunc}`}\n          style={{\n            width: `${scale(d.level)}%`,\n            height: '30px',\n            display: 'inline-flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}\n        >\n          <span>{d.type}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nSkillBar.propTypes = { data: PropTypes.array };\n\nSkillBar.defaultProps = { data: [] };\n\nconst CardStack = ({ number }) => (\n  // const scale = d3\n  //   .scaleLinear()\n  //   .domain([0])\n  //   .range([30, 100]);\n\n  <div style={{ display: 'flex' }}>\n    {d3.range(0, number).map(() => (\n      <div style={{ width: `${2}%` }}>\n        <CardMarker width={30} />\n      </div>\n    ))}\n  </div>\n);\n\nCardStack.propTypes = {\n  number: PropTypes.number\n};\n\nCardStack.defaultProps = { number: 0 };\n\nconst Author = ({ extended, onClose, ...profile }) => {\n  const { name, skills, activity, interests } = profile;\n  if (!extended) {\n    return (\n      <fieldset className={cx.field}>\n        <legend>Author:</legend>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%'\n          }}\n        >\n          <img\n            className={`${cx.avatar}`}\n            width={'80%'}\n            height={'80%'}\n            src={profileSrc()}\n            alt=\"alt\"\n          />\n        </div>\n      </fieldset>\n    );\n  }\n  return (\n    <div\n      style={{\n        display: 'flex',\n        position: 'relative',\n        justifyContent: 'center',\n        // alignItems: 'center',\n        flexDirection: 'column'\n      }}\n      className=\"mt-3\"\n    >\n      <button\n        type=\"button\"\n        className=\"close \"\n        style={{ position: 'absolute', top: 0 }}\n        data-dismiss=\"modal\"\n        aria-label=\"Close\"\n        onClick={onClose}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <img\n        className={`${cx.avatar}`}\n        style={{ alignSelf: 'center' }}\n        width={'40%'}\n        height={'40%'}\n        src={profileSrc()}\n        alt=\"alt\"\n      />\n\n      <div className=\"mt-2\" style={{ fontSize: '14px', fontWeight: 700 }}>\n        Personal\n      </div>\n      <fieldset className={cx.field}>\n        <legend>Interests:</legend>\n        <SkillBar data={interests} />\n      </fieldset>\n\n      <fieldset className={cx.field}>\n        <legend>skills:</legend>\n        <SkillBar data={skills} />\n      </fieldset>\n      <div className=\"mt-2\" style={{ fontSize: '14px', fontWeight: 700 }}>\n        Activity\n      </div>\n      <fieldset className={cx.field}>\n        <legend>Collected Cards:</legend>\n        <CardStack number={30} />\n      </fieldset>\n      <fieldset className={cx.field}>\n        <legend>Created Cards:</legend>\n        <CardStack number={14} />\n      </fieldset>\n    </div>\n  );\n};\n\n// Author.propTypes = {\n//   //  profile: PropTypes.shape({\n//   name: PropTypes.string,\n//   skills: PropTypes.array(\n//     PropTypes.shape({ name: PropTypes.string, level: PropTypes.number })\n//   ),\n//   activity: PropTypes.object(\n//     PropTypes.shape({\n//       collectedCards: PropTypes.number,\n//       createdCards: PropTypes.number\n//     })\n//   ),\n//   extended: PropTypes.bool\n// };\n\nAuthor.defaultProps = {\n  // profile: {\n  name: 'jan',\n  skills: [\n    { type: 'arts', level: 22 },\n    { type: 'music', level: 14 },\n    { type: 'sports', level: 10 }\n  ],\n  interests: [\n    { type: 'movies', level: 12 },\n    { type: 'football', level: 5 },\n    { type: 'xbox', level: 10 }\n  ],\n  activity: { collectedCards: 20, createdCards: 13 },\n  // },\n  extended: false\n};\n\nconst Profile = ({ data }) => (\n  <div className=\"media mt-3\">\n    <img\n      className={`d-flex mr-3 ${cx.avatar}`}\n      width={64}\n      height={64}\n      src={profileSrc()}\n      alt=\"alt\"\n    />\n    <div className=\"media-body\">\n      <div className={cx.textClamp}>{data.comment}</div>\n      <div>\n        <small className=\"font-italic\">- {data.name}</small>\n      </div>\n    </div>\n  </div>\n);\n\nProfile.propTypes = {\n  data: PropTypes.object.isRequired\n};\nProfile.defaultProps = {\n  data: {}\n};\n\n// TODO; rempve\nProfile.defaultProps = { name: 'jan', comment: 'yeah' };\n\nclass ReadCardBack extends Component {\n  static propTypes = {\n    key: PropTypes.string.isRequired,\n    comments: PropTypes.array.isRequired,\n    challenge: PropTypes.object.isRequired,\n    author: PropTypes.object.isRequired,\n    flipHandler: PropTypes.func.isRequired,\n    cardSets: PropTypes.array,\n    linkedCards: PropTypes.array,\n    loc: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number\n    }),\n    media: PropTypes.array.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { extended: null };\n  }\n\n  render() {\n    const {\n      challenge,\n      comments,\n      media,\n      cardSets,\n      linkedCards,\n      loc,\n      author\n    } = this.props;\n    const { extended } = this.state;\n    const selectField = field => () =>\n      this.setState(prevstate => ({\n        extended: prevstate.extended !== field ? field : null\n      }));\n\n    const setSizeProps = field => {\n      if (field === extended)\n        return {\n          colSpan: 2,\n          rowSpan: 3\n        };\n      return {};\n    };\n    const isHidden = field => extended !== null && extended !== field;\n    const display = field => ({\n      display: isHidden(field) ? 'none' : null\n    });\n\n    return (\n      <div\n        className={`container ${cx.cardMini2} `}\n        style={{\n          height: '90%',\n          zIndex: -10\n        }}\n      >\n        <Grid cols={2} rows={3} gap={1}>\n          <div\n            {...setSizeProps('author')}\n            style={display('author')}\n            onClick={selectField('author')}\n          >\n            <Author\n              {...author}\n              extended={extended === 'author'}\n              onClose={() => {\n                // TODO\n                // console.log('onCLose');\n                // this.setState({ extended: null });\n              }}\n            />\n          </div>\n          <div onClick={selectField('map')}>\n            <fieldset\n              className={cx.field}\n              style={display('map')}\n              {...setSizeProps('map')}\n            >\n              <legend>Map:</legend>\n              <Wrapper>\n                {(width, height) => (\n                  <MapGL\n                    width={width}\n                    height={height}\n                    latitude={loc.latitude}\n                    longitude={loc.longitude}\n                    zoom={8}\n                  />\n                )}\n              </Wrapper>\n            </fieldset>\n          </div>\n          <div onClick={selectField('cardSets')}>\n            <fieldset\n              className={cx.field}\n              style={display('cardSets')}\n              {...setSizeProps('cardSets')}\n            >\n              <legend>Cardsets:</legend>\n              <Tags data={cardSets} />\n            </fieldset>\n          </div>\n          <div onClick={selectField('linkedCards')}>\n            <fieldset\n              className={cx.field}\n              style={display('linkedCards')}\n              {...setSizeProps('linkedCards')}\n            >\n              <legend>Linked Cards</legend>\n              <div>\n                <Tags data={linkedCards} />\n              </div>\n            </fieldset>\n          </div>\n          <div onClick={selectField('comments')} colSpan={2}>\n            <fieldset\n              className={cx.field}\n              style={display('comments')}\n              {...setSizeProps('comments')}\n            >\n              <legend>Comments:</legend>\n              <Comments data={comments} />\n            </fieldset>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nReadCardBack.defaultProps = {\n  challenge: { type: '0' },\n  comments: Comments.defaultProps.data,\n  media: Media.defaultProps.data,\n  cardSets: ['testseries', 'pirateSet'],\n  linkedCards: ['Captain hook', 'yeah'],\n  loc: { latitude: 0, longitude: 0 },\n  author: Profile.defaultProps.data\n};\n\nclass EditableCardBack extends Component {\n  static propTypes = {\n    key: PropTypes.string.isRequired,\n    challenge: PropTypes.object.isRequired,\n    author: PropTypes.object.isRequired,\n    flipHandler: PropTypes.func.isRequired,\n    cardSets: PropTypes.object.isRequired,\n    linkedCards: PropTypes.object.isRequireds,\n    loc: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number\n    }),\n    media: PropTypes.array.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { extended: null };\n  }\n\n  render() {\n    const { challenge, media, cardSets, linkedCards, loc } = this.props;\n    const { extended } = this.state;\n    const selectField = field => () =>\n      this.setState(prevstate => ({\n        extended: prevstate.extended !== field ? field : null\n      }));\n\n    const setSizeProps = field => {\n      if (field === extended)\n        return {\n          colSpan: 2,\n          rowSpan: 3\n        };\n      return {};\n    };\n    const isHidden = field => extended !== null && extended !== field;\n    const display = field => ({\n      display: isHidden(field) ? 'none' : null\n    });\n\n    return (\n      <div\n        className={`container ${cx.cardMini2} `}\n        style={{\n          height: '90%',\n          zIndex: -10\n        }}\n      >\n        <Grid cols={2} rows={3} gap={1}>\n          <div onClick={selectField('author')}>\n            <fieldset\n              className={cx.field}\n              style={display('author')}\n              {...setSizeProps('author')}\n            >\n              <legend>Author:</legend>\n              <div style={{ display: 'flex' }}>\n                <div>{'Placeholder'}</div>\n                <EditButton\n                  onClick={() =>\n                    this.setState({\n                      dialog: { title: 'author', id: 'author', data: '' }\n                    })\n                  }\n                />\n              </div>\n            </fieldset>\n          </div>\n          <div onClick={selectField('map')}>\n            <fieldset\n              className={cx.field}\n              style={display('map')}\n              {...setSizeProps('map')}\n            >\n              <legend>Map:</legend>\n              <Wrapper>\n                {(width, height) => (\n                  <MapGL\n                    width={width}\n                    height={height}\n                    latitude={loc.latitude}\n                    longitude={loc.longitude}\n                    zoom={8}\n                  />\n                )}\n              </Wrapper>\n            </fieldset>\n          </div>\n          <div onClick={selectField('cardSets')}>\n            <fieldset\n              className={cx.field}\n              style={display('cardSets')}\n              {...setSizeProps('cardSets')}\n            >\n              <legend>Cardsets:</legend>\n              <Tags data={cardSets} />\n              <EditButton\n                onClick={() =>\n                  this.setState({\n                    dialog: { title: 'author', id: 'author', data: '' }\n                  })\n                }\n              />\n            </fieldset>\n          </div>\n          <div onClick={selectField('linkedCards')}>\n            <fieldset\n              className={cx.field}\n              style={display('linkedCards')}\n              {...setSizeProps('linkedCards')}\n            >\n              <legend>Linked Cards</legend>\n              <div>\n                <Tags data={linkedCards} />\n              </div>\n            </fieldset>\n          </div>\n          <div onClick={selectField('comments')}>\n            <fieldset\n              colSpan={2}\n              className={cx.field}\n              style={display('comments')}\n              {...setSizeProps('comments')}\n            >\n              <legend>Comments:</legend>\n              {'Placeholder'}\n            </fieldset>\n          </div>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction CardBack(props) {\n  return props.edit ? (\n    <EditableCardBack {...props} />\n  ) : (\n    <ReadCardBack {...props} />\n  );\n}\n\n// ReadCardBack.defaultProps = {\n//   key: 'asa',\n//   comments: [\n//     {\n//       user: 'Nils',\n//       img:\n//         'https://placeholdit.imgix.net/~text?txtsize=6&txt=50%C3%9750&w=50&h=50',\n//       comment: 'I did not know that he was such a famous composer',\n//       date: '22/04/2016'\n//     },\n//     {\n//       user: 'Babba',\n//       comment: 'What a nice park, strange, that they put a mask on his face!',\n//       date: '22/04/2016'\n//     }\n//   ],\n//   author: { name: 'jan', comment: 'welcome to my super hard challenge!' }\n// };\n\nconst CollectButton = ({ collected, onClick, expPoints }) => (\n  <div className=\"p-1 pt-3\">\n    <button\n      className={`btn btn-secondary btn-lg btn-block}`}\n      style={{ width: '100%', alignSelf: 'flex-end' }}\n      onClick={onClick}\n    >\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <span>{'Collect'}</span>\n        <div\n          style={{\n            marginLeft: '4px',\n            paddingLeft: '4px',\n            paddingRight: '4px',\n            border: '1px black solid',\n            borderRadius: '5px'\n          }}\n        >\n          {`${expPoints}xp`}\n        </div>\n      </div>\n    </button>\n  </div>\n);\n\nCollectButton.propTypes = {\n  dataTarget: PropTypes.string,\n  collected: PropTypes.bool,\n  onClick: PropTypes.func,\n  expPoints: PropTypes.number\n};\n\nCollectButton.defaultProps = {\n  collected: false,\n  toggleCardChallenge: d => d,\n  expPoints: 60\n};\n\nclass Card extends React.Component {\n  static propTypes = {\n    onClose: PropTypes.oneOf([null, PropTypes.func]),\n    collectHandler: PropTypes.oneOf([null, PropTypes.func]),\n    style: PropTypes.object,\n    editable: PropTypes.bool\n  };\n  static defaultProps = {\n    onClose: d => d,\n    collectHandler: null,\n    style: {},\n    editable: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      frontView: true\n    };\n  }\n\n  render() {\n    const { style, editable, challenge } = this.props;\n    const { frontView } = this.state;\n    // const { onClose } = this.props;\n    const sideToggler = frontView ? cx.flipAnim : null;\n    const { onCollect } = this.props;\n    const flipHandler = () => {\n      this.setState(oldState => ({\n        frontView: !oldState.frontView\n      }));\n    };\n    const color = colorScale(challenge.type);\n    const togglecard = () => {\n      if (frontView)\n        return (\n          <CardFrame {...this.props} flipHandler={flipHandler} color={color}>\n            <CardFront\n              {...this.props}\n              edit={editable}\n              onCollect={onCollect}\n              color={color}\n            />\n          </CardFrame>\n        );\n      return (\n        <CardFrame {...this.props} flipHandler={flipHandler} color={color}>\n          <CardBack {...this.props} edit={editable} />\n        </CardFrame>\n      );\n    };\n\n    // console.log('ToggleCard', ToggleCard);\n\n    return (\n      <div className={`${cx.flipContainer} ${sideToggler}`} style={style}>\n        <div\n          className={`${cx.flipper} ${sideToggler}`}\n          style={{\n            background: color\n          }}\n        >\n          {togglecard()}\n        </div>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  ...ReadCardFront.propTypes,\n  ...ReadCardBack.propTypes\n};\n\nCard.defaultProps = {\n  ...ReadCardFront.defaultProps,\n  ...ReadCardBack.defaultProps\n};\n\nclass TagInput extends React.Component {\n  static propTypes = {\n    values: PropTypes.array,\n    onSubmit: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { tags } = props;\n    this.state = {\n      tags: tags.map((text, i) => ({ id: i, text })),\n      suggestions: ['Belgium', 'Germany', 'Brazil']\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAddition = this.handleAddition.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n  }\n\n  handleDelete(i) {\n    const tags = this.state.tags;\n    tags.splice(i, 1);\n    this.setState({ tags });\n  }\n\n  handleAddition(tag) {\n    const tags = this.state.tags;\n    tags.push({\n      id: tags.length + 1,\n      text: tag\n    });\n    this.setState({ tags });\n  }\n\n  handleDrag(tag, currPos, newPos) {\n    const tags = this.state.tags;\n\n    // mutate array\n    tags.splice(currPos, 1);\n    tags.splice(newPos, 0, tag);\n\n    // re-render\n    this.setState({ tags });\n  }\n\n  render() {\n    const { tags, suggestions } = this.state;\n    const { onSubmit } = this.props;\n\n    return (\n      <ModalHeaderFooter onSubmit={() => onSubmit(tags.map(d => d.text))}>\n        <ReactTags\n          classNames={{\n            tags: 'tagsClass',\n            tagInput: 'tagInputClass',\n            tagInputField: 'tagInputFieldClass',\n            selected: 'selectedClass',\n            tag: `${cx.tag} ${colorScaleRandom()}`,\n            remove: 'removeClass',\n            suggestions: 'suggestionsClass',\n            activeSuggestion: 'activeSuggestionClass'\n          }}\n          tags={tags}\n          suggestions={suggestions}\n          handleDelete={this.handleDelete}\n          handleAddition={this.handleAddition}\n          handleDrag={this.handleDrag}\n        />\n      </ModalHeaderFooter>\n    );\n  }\n}\n\n// CardCont.defaultProps = {\n//   selected: true\n// };\n\n// CardCont.propTypes = { selected: PropTypes.bool };\n\nexport { Card, PreviewCard, TagInput };\n"]}]}