{"remainingRequest":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js?cacheDirectory=true!/home/djan/dev/TickleClient/src/components/MapView/index.jsx","dependencies":[{"path":"/home/djan/dev/TickleClient/src/components/MapView/index.jsx","mtime":1516627151315},{"path":"/home/djan/dev/TickleClient/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js","mtime":1492805601000}],"contextDependencies":[],"result":["import _extends from 'babel-runtime/helpers/extends';\n// import React from 'react';\nimport { connect } from 'react-redux';\n// import { toggleChallenge } from '../actions';\nimport { selectCard, resizeCardWindow as _resizeCardWindow, userMove, changeMapViewport, screenResize, playCardChallenge, toggleCardChallenge, extendSelectedCard } from './actions';\n\nimport MapView from './MapView';\n\n// import mapViewReducer from './reducer';\n\n// Container\nvar mapStateToProps = function mapStateToProps(state) {\n  return _extends({}, state.MapView);\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    cardClick: function cardClick(card) {\n      dispatch(selectCard(card));\n    },\n    resizeCardWindow: function resizeCardWindow(options) {\n      dispatch(_resizeCardWindow(options));\n    },\n    userMoveAction: function userMoveAction(pos) {\n      dispatch(userMove(pos));\n    },\n    changeMapViewportAction: function changeMapViewportAction(viewport) {\n      dispatch(changeMapViewport(viewport));\n    },\n    selectCardAction: function selectCardAction(options) {\n      // console.log('dispatch', viewport);\n      dispatch(selectCard(options));\n    },\n    screenResizeAction: function screenResizeAction(options) {\n      console.log('before dispatch screenResize');\n      dispatch(screenResize(options));\n    },\n    playCardChallengeAction: function playCardChallengeAction(options) {\n      dispatch(playCardChallenge(options));\n    },\n    toggleCardChallengeAction: function toggleCardChallengeAction(options) {\n      console.log('dispatch options', options);\n      dispatch(toggleCardChallenge(options));\n    },\n    extCardAction: function extCardAction(options) {\n      console.log('dispatch options', options);\n      dispatch(extendSelectedCard(options));\n    }\n  };\n};\n\nvar MapViewCont = connect(mapStateToProps, mapDispatchToProps)(MapView);\n\nvar _default = MapViewCont;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/home/djan/dev/TickleClient/src/components/MapView/index.jsx');\n\n  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', '/home/djan/dev/TickleClient/src/components/MapView/index.jsx');\n\n  __REACT_HOT_LOADER__.register(MapViewCont, 'MapViewCont', '/home/djan/dev/TickleClient/src/components/MapView/index.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/home/djan/dev/TickleClient/src/components/MapView/index.jsx');\n}();\n\n;",{"version":3,"sources":["src/components/MapView/index.jsx"],"names":["connect","selectCard","resizeCardWindow","userMove","changeMapViewport","screenResize","playCardChallenge","toggleCardChallenge","extendSelectedCard","MapView","mapStateToProps","state","mapDispatchToProps","cardClick","dispatch","card","options","userMoveAction","pos","changeMapViewportAction","viewport","selectCardAction","screenResizeAction","console","log","playCardChallengeAction","toggleCardChallengeAction","extCardAction","MapViewCont"],"mappings":";AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA;AACA,SACEC,UADF,EAEEC,qCAFF,EAGEC,QAHF,EAIEC,iBAJF,EAKEC,YALF,EAMEC,iBANF,EAOEC,mBAPF,EAQEC,kBARF,QASO,WATP;;AAWA,OAAOC,OAAP,MAAoB,WAApB;;AAEA;;AAEA;AACA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,sBACnBC,MAAMF,OADa;AAAA,CAAxB;;AAIA,IAAMG,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtCC,eAAW,yBAAQ;AACjBC,eAASb,WAAWc,IAAX,CAAT;AACD,KAHqC;AAItCb,sBAAkB,mCAAW;AAC3BY,eAASZ,kBAAiBc,OAAjB,CAAT;AACD,KANqC;AAOtCC,oBAAgB,6BAAO;AACrBH,eAASX,SAASe,GAAT,CAAT;AACD,KATqC;AAUtCC,6BAAyB,2CAAY;AACnCL,eAASV,kBAAkBgB,QAAlB,CAAT;AACD,KAZqC;AAatCC,sBAAkB,mCAAW;AAC3B;AACAP,eAASb,WAAWe,OAAX,CAAT;AACD,KAhBqC;AAiBtCM,wBAAoB,qCAAW;AAC7BC,cAAQC,GAAR,CAAY,8BAAZ;AACAV,eAAST,aAAaW,OAAb,CAAT;AACD,KApBqC;AAqBtCS,6BAAyB,0CAAW;AAClCX,eAASR,kBAAkBU,OAAlB,CAAT;AACD,KAvBqC;AAwBtCU,+BAA2B,4CAAW;AACpCH,cAAQC,GAAR,CAAY,kBAAZ,EAAgCR,OAAhC;AACAF,eAASP,oBAAoBS,OAApB,CAAT;AACD,KA3BqC;AA4BtCW,mBAAe,gCAAW;AACxBJ,cAAQC,GAAR,CAAY,kBAAZ,EAAgCR,OAAhC;AACAF,eAASN,mBAAmBQ,OAAnB,CAAT;AACD;AA/BqC,GAAb;AAAA,CAA3B;;AAkCA,IAAMY,cAAc5B,QAAQU,eAAR,EAAyBE,kBAAzB,EAA6CH,OAA7C,CAApB;;eAEemB,W;AAAf;;;;;;;;gCAxCMlB,e;;gCAIAE,kB;;gCAkCAgB,W","file":"index.jsx","sourceRoot":"/home/djan/dev/TickleClient","sourcesContent":["// import React from 'react';\nimport { connect } from 'react-redux';\n// import { toggleChallenge } from '../actions';\nimport {\n  selectCard,\n  resizeCardWindow,\n  userMove,\n  changeMapViewport,\n  screenResize,\n  playCardChallenge,\n  toggleCardChallenge,\n  extendSelectedCard\n} from './actions';\n\nimport MapView from './MapView';\n\n// import mapViewReducer from './reducer';\n\n// Container\nconst mapStateToProps = state => ({\n  ...state.MapView\n});\n\nconst mapDispatchToProps = dispatch => ({\n  cardClick: card => {\n    dispatch(selectCard(card));\n  },\n  resizeCardWindow: options => {\n    dispatch(resizeCardWindow(options));\n  },\n  userMoveAction: pos => {\n    dispatch(userMove(pos));\n  },\n  changeMapViewportAction: viewport => {\n    dispatch(changeMapViewport(viewport));\n  },\n  selectCardAction: options => {\n    // console.log('dispatch', viewport);\n    dispatch(selectCard(options));\n  },\n  screenResizeAction: options => {\n    console.log('before dispatch screenResize');\n    dispatch(screenResize(options));\n  },\n  playCardChallengeAction: options => {\n    dispatch(playCardChallenge(options));\n  },\n  toggleCardChallengeAction: options => {\n    console.log('dispatch options', options);\n    dispatch(toggleCardChallenge(options));\n  },\n  extCardAction: options => {\n    console.log('dispatch options', options);\n    dispatch(extendSelectedCard(options));\n  }\n});\n\nconst MapViewCont = connect(mapStateToProps, mapDispatchToProps)(MapView);\n\nexport default MapViewCont;\n"]}]}