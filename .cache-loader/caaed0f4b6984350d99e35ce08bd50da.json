{"remainingRequest":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js?cacheDirectory=true!/home/djan/dev/TickleClient/src/Routes.jsx","dependencies":[{"path":"/home/djan/dev/TickleClient/src/Routes.jsx","mtime":1516897131002},{"path":"/home/djan/dev/TickleClient/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/home/djan/dev/TickleClient/node_modules/babel-loader/lib/index.js","mtime":1492805601000}],"contextDependencies":[],"result":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport {\n// Router,\nRoute,\n// hashHistory,\n// IndexRoute,\n// Link,\nHashRouter, Switch } from 'react-router-dom';\n// import debug from 'debug';\n\nimport actions from './actions';\nimport reducers from './reducers';\n\nimport MapView from './components/MapView';\nimport CardCreator from './components/CardCreator';\nimport Generator from './components/Generator';\n\nimport DefaultLayout from './layouts/MainLayout';\n\nimport { dummyCards } from './dummyData';\n\ndummyCards.forEach(function (d, i) {\n  d.id = i;\n  return d;\n});\n// import NotFound from './containers/NotFound/NotFound';\n\nvar defaultLocation = {\n  latitude: 50.85146,\n  longitude: 4.315483\n};\n// debug('lego:routes');\nvar defaultState = {\n  MapView: {\n    headerPad: 60, // TODO: remove\n    cards: dummyCards,\n    mapZoom: 20,\n    centerLocation: defaultLocation,\n    userLocation: defaultLocation,\n    selectedCardId: null,\n    height: 100,\n    width: 100,\n    defaultHeight: 100,\n    gridWidth: 100,\n    maxHeight: 100,\n    minHeight: 100,\n    mapHeight: 100,\n    gridHeight: 100,\n    cardChallengeOpen: false,\n    extCardId: false\n  },\n  CardCreator: {\n    headerPad: 60, // TODO: remove\n    cards: dummyCards,\n    width: 100,\n    height: 100,\n    mapViewport: _extends({}, defaultLocation, { zoom: 10 }),\n    selectedCardId: null,\n    tempCards: [],\n    cardTemplateOpen: false\n  }\n};\n\nvar store = createStore(reducers, defaultState);\n\nconsole.log('actions', actions);\n\n// window.addEventListener('load', () => {\n//   store.dispatch(\n//     actions.screenResize({\n//       width: window.innerWidth,\n//       height: window.innerHeight\n//     })\n//   );\n// });\n\nvar Routes = function Routes() {\n  return React.createElement(\n    HashRouter,\n    null,\n    React.createElement(\n      Switch,\n      null,\n      React.createElement(Route, {\n        exact: true,\n        path: '/',\n        render: function render() {\n          return React.createElement(\n            DefaultLayout,\n            null,\n            React.createElement(\n              Provider,\n              { store: store },\n              React.createElement(MapView, null)\n            )\n          );\n        }\n      }),\n      React.createElement(Route, {\n        exact: true,\n        path: '/cardcreator',\n        render: function render() {\n          return React.createElement(\n            DefaultLayout,\n            null,\n            React.createElement(\n              Provider,\n              { store: store },\n              React.createElement(CardCreator, null)\n            )\n          );\n        }\n      }),\n      React.createElement(Route, {\n        exact: true,\n        path: '/generator',\n        render: function render() {\n          return React.createElement(\n            DefaultLayout,\n            null,\n            React.createElement(\n              Provider,\n              { store: store },\n              React.createElement(Generator, null)\n            )\n          );\n        }\n      })\n    )\n  );\n};\n\nvar _default = Routes;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(defaultLocation, 'defaultLocation', '/home/djan/dev/TickleClient/src/Routes.jsx');\n\n  __REACT_HOT_LOADER__.register(defaultState, 'defaultState', '/home/djan/dev/TickleClient/src/Routes.jsx');\n\n  __REACT_HOT_LOADER__.register(store, 'store', '/home/djan/dev/TickleClient/src/Routes.jsx');\n\n  __REACT_HOT_LOADER__.register(Routes, 'Routes', '/home/djan/dev/TickleClient/src/Routes.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/home/djan/dev/TickleClient/src/Routes.jsx');\n}();\n\n;",{"version":3,"sources":["src/Routes.jsx"],"names":["React","createStore","Provider","Route","HashRouter","Switch","actions","reducers","MapView","CardCreator","Generator","DefaultLayout","dummyCards","forEach","d","i","id","defaultLocation","latitude","longitude","defaultState","headerPad","cards","mapZoom","centerLocation","userLocation","selectedCardId","height","width","defaultHeight","gridWidth","maxHeight","minHeight","mapHeight","gridHeight","cardChallengeOpen","extCardId","mapViewport","zoom","tempCards","cardTemplateOpen","store","console","log","Routes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA;AACE;AACAC,KAFF;AAGE;AACA;AACA;AACAC,UANF,EAOEC,MAPF,QAQO,kBARP;AASA;;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,SAASC,UAAT,QAA2B,aAA3B;;AAEAA,WAAWC,OAAX,CAAmB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC3BD,IAAEE,EAAF,GAAOD,CAAP;AACA,SAAOD,CAAP;AACD,CAHD;AAIA;;AAEA,IAAMG,kBAAkB;AACtBC,YAAU,QADY;AAEtBC,aAAW;AAFW,CAAxB;AAIA;AACA,IAAMC,eAAe;AACnBZ,WAAS;AACPa,eAAW,EADJ,EACQ;AACfC,WAAOV,UAFA;AAGPW,aAAS,EAHF;AAIPC,oBAAgBP,eAJT;AAKPQ,kBAAcR,eALP;AAMPS,oBAAgB,IANT;AAOPC,YAAQ,GAPD;AAQPC,WAAO,GARA;AASPC,mBAAe,GATR;AAUPC,eAAW,GAVJ;AAWPC,eAAW,GAXJ;AAYPC,eAAW,GAZJ;AAaPC,eAAW,GAbJ;AAcPC,gBAAY,GAdL;AAePC,uBAAmB,KAfZ;AAgBPC,eAAW;AAhBJ,GADU;AAmBnB3B,eAAa;AACXY,eAAW,EADA,EACI;AACfC,WAAOV,UAFI;AAGXgB,WAAO,GAHI;AAIXD,YAAQ,GAJG;AAKXU,8BAAkBpB,eAAlB,IAAmCqB,MAAM,EAAzC,GALW;AAMXZ,oBAAgB,IANL;AAOXa,eAAW,EAPA;AAQXC,sBAAkB;AARP;AAnBM,CAArB;;AA+BA,IAAMC,QAAQxC,YAAYM,QAAZ,EAAsBa,YAAtB,CAAd;;AAEAsB,QAAQC,GAAR,CAAY,SAAZ,EAAuBrC,OAAvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMsC,SAAS,SAATA,MAAS;AAAA,SACb;AAAC,cAAD;AAAA;AACE;AAAC,YAAD;AAAA;AACE,0BAAC,KAAD;AACE,mBADF;AAEE,cAAK,GAFP;AAGE,gBAAQ;AAAA,iBACN;AAAC,yBAAD;AAAA;AACE;AAAC,sBAAD;AAAA,gBAAU,OAAOH,KAAjB;AACE,kCAAC,OAAD;AADF;AADF,WADM;AAAA;AAHV,QADF;AAYE,0BAAC,KAAD;AACE,mBADF;AAEE,cAAK,cAFP;AAGE,gBAAQ;AAAA,iBACN;AAAC,yBAAD;AAAA;AACE;AAAC,sBAAD;AAAA,gBAAU,OAAOA,KAAjB;AACE,kCAAC,WAAD;AADF;AADF,WADM;AAAA;AAHV,QAZF;AAuBE,0BAAC,KAAD;AACE,mBADF;AAEE,cAAK,YAFP;AAGE,gBAAQ;AAAA,iBACN;AAAC,yBAAD;AAAA;AACE;AAAC,sBAAD;AAAA,gBAAU,OAAOA,KAAjB;AACE,kCAAC,SAAD;AADF;AADF,WADM;AAAA;AAHV;AAvBF;AADF,GADa;AAAA,CAAf;;eAwCeG,M;AAAf;;;;;;;;gCAzFM3B,e;;gCAKAG,Y;;gCA+BAqB,K;;gCAaAG,M","file":"Routes.jsx","sourceRoot":"/home/djan/dev/TickleClient","sourcesContent":["import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport {\n  // Router,\n  Route,\n  // hashHistory,\n  // IndexRoute,\n  // Link,\n  HashRouter,\n  Switch\n} from 'react-router-dom';\n// import debug from 'debug';\n\nimport actions from './actions';\nimport reducers from './reducers';\n\nimport MapView from './components/MapView';\nimport CardCreator from './components/CardCreator';\nimport Generator from './components/Generator';\n\nimport DefaultLayout from './layouts/MainLayout';\n\nimport { dummyCards } from './dummyData';\n\ndummyCards.forEach((d, i) => {\n  d.id = i;\n  return d;\n});\n// import NotFound from './containers/NotFound/NotFound';\n\nconst defaultLocation = {\n  latitude: 50.85146,\n  longitude: 4.315483\n};\n// debug('lego:routes');\nconst defaultState = {\n  MapView: {\n    headerPad: 60, // TODO: remove\n    cards: dummyCards,\n    mapZoom: 20,\n    centerLocation: defaultLocation,\n    userLocation: defaultLocation,\n    selectedCardId: null,\n    height: 100,\n    width: 100,\n    defaultHeight: 100,\n    gridWidth: 100,\n    maxHeight: 100,\n    minHeight: 100,\n    mapHeight: 100,\n    gridHeight: 100,\n    cardChallengeOpen: false,\n    extCardId: false\n  },\n  CardCreator: {\n    headerPad: 60, // TODO: remove\n    cards: dummyCards,\n    width: 100,\n    height: 100,\n    mapViewport: { ...defaultLocation, zoom: 10 },\n    selectedCardId: null,\n    tempCards: [],\n    cardTemplateOpen: false\n  }\n};\n\nconst store = createStore(reducers, defaultState);\n\nconsole.log('actions', actions);\n\n// window.addEventListener('load', () => {\n//   store.dispatch(\n//     actions.screenResize({\n//       width: window.innerWidth,\n//       height: window.innerHeight\n//     })\n//   );\n// });\n\nconst Routes = () => (\n  <HashRouter>\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <DefaultLayout>\n            <Provider store={store}>\n              <MapView />\n            </Provider>\n          </DefaultLayout>\n        )}\n      />\n      <Route\n        exact\n        path=\"/cardcreator\"\n        render={() => (\n          <DefaultLayout>\n            <Provider store={store}>\n              <CardCreator />\n            </Provider>\n          </DefaultLayout>\n        )}\n      />\n      <Route\n        exact\n        path=\"/generator\"\n        render={() => (\n          <DefaultLayout>\n            <Provider store={store}>\n              <Generator />\n            </Provider>\n          </DefaultLayout>\n        )}\n      />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n"]}]}